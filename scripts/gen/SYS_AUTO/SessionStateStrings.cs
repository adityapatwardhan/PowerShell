//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;



/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class SessionStateStrings {
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal SessionStateStrings() {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SessionStateStrings", typeof(SessionStateStrings).GetTypeInfo().Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The AllScope option cannot be removed from the alias &apos;{0}&apos;..
    /// </summary>
    internal static string AliasAllScopeOptionCannotBeRemoved {
        get {
            return ResourceManager.GetString("AliasAllScopeOptionCannotBeRemoved", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The alias is not allowed, because an alias with the name &apos;{0}&apos; already exists..
    /// </summary>
    internal static string AliasAlreadyExists {
        get {
            return ResourceManager.GetString("AliasAlreadyExists", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Alias {0} cannot be made constant after it has been created. Aliases can only be made constant at creation time..
    /// </summary>
    internal static string AliasCannotBeMadeConstant {
        get {
            return ResourceManager.GetString("AliasCannotBeMadeConstant", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Drive that contains a view of the aliases stored in a session state.
    /// </summary>
    internal static string AliasDriveDescription {
        get {
            return ResourceManager.GetString("AliasDriveDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Alias {0} cannot be modified because it is constant..
    /// </summary>
    internal static string AliasIsConstant {
        get {
            return ResourceManager.GetString("AliasIsConstant", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Alias {0} cannot be modified because it is read-only..
    /// </summary>
    internal static string AliasIsReadOnly {
        get {
            return ResourceManager.GetString("AliasIsReadOnly", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find alias because alias &apos;{0}&apos; does not exist..
    /// </summary>
    internal static string AliasNotFound {
        get {
            return ResourceManager.GetString("AliasNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Alias was not removed because alias {0} is constant or read-only..
    /// </summary>
    internal static string AliasNotRemovable {
        get {
            return ResourceManager.GetString("AliasNotRemovable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Alias is not writeable because alias {0} is read-only or constant and cannot be written to..
    /// </summary>
    internal static string AliasNotWritable {
        get {
            return ResourceManager.GetString("AliasNotWritable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Alias {0} cannot be created because alias capacity {1} has been exceeded for this scope..
    /// </summary>
    internal static string AliasOverflow {
        get {
            return ResourceManager.GetString("AliasOverflow", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The alias is not allowed, because a command with the name &apos;{0}&apos; and command type &apos;{1}&apos; already exists..
    /// </summary>
    internal static string AliasWithCommandNameAlreadyExists {
        get {
            return ResourceManager.GetString("AliasWithCommandNameAlreadyExists", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot rename alias because alias {0} is read-only or constant..
    /// </summary>
    internal static string CannotRenameAlias {
        get {
            return ResourceManager.GetString("CannotRenameAlias", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot rename filter because filter {0} is read-only or constant..
    /// </summary>
    internal static string CannotRenameFilter {
        get {
            return ResourceManager.GetString("CannotRenameFilter", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot rename function because function {0} is read-only or constant..
    /// </summary>
    internal static string CannotRenameFunction {
        get {
            return ResourceManager.GetString("CannotRenameFunction", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot rename variable because variable {0} is read-only or constant..
    /// </summary>
    internal static string CannotRenameVariable {
        get {
            return ResourceManager.GetString("CannotRenameVariable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot run software. Permission is denied..
    /// </summary>
    internal static string CanNotRun {
        get {
            return ResourceManager.GetString("CanNotRun", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the ClearContent operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ClearContentDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("ClearContentDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the ClearContent operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ClearContentProviderException {
        get {
            return ResourceManager.GetString("ClearContentProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the ClearItem operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ClearItemDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("ClearItemDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the ClearItem operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ClearItemProviderException {
        get {
            return ResourceManager.GetString("ClearItemProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the ClearProperty operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ClearPropertyDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("ClearPropertyDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the ClearProperty operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ClearPropertyProviderException {
        get {
            return ResourceManager.GetString("ClearPropertyProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cmdlet {0} cannot be modified because it is read-only..
    /// </summary>
    internal static string CmdletIsReadOnly {
        get {
            return ResourceManager.GetString("CmdletIsReadOnly", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Provider operation stopped because the provider does not support this operation..
    /// </summary>
    internal static string CmdletProvider_NotSupported {
        get {
            return ResourceManager.GetString("CmdletProvider_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Provider operation stopped because the provider does not support the &apos;Depth&apos; parameter..
    /// </summary>
    internal static string CmdletProvider_NotSupportedRecursionDepth {
        get {
            return ResourceManager.GetString("CmdletProvider_NotSupportedRecursionDepth", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot register the cmdlet provider because a cmdlet provider with the name &apos;{0}&apos; already exists..
    /// </summary>
    internal static string CmdletProviderAlreadyExists {
        get {
            return ResourceManager.GetString("CmdletProviderAlreadyExists", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot access the command because it is a private command..
    /// </summary>
    internal static string CommandIsPrivate {
        get {
            return ResourceManager.GetString("CommandIsPrivate", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Provider methods not processed. The ContainerCmdletProvider methods are not supported by this provider..
    /// </summary>
    internal static string ContainerCmdletProvider_NotSupported {
        get {
            return ResourceManager.GetString("ContainerCmdletProvider_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Container cannot be copied onto existing leaf item..
    /// </summary>
    internal static string CopyContainerItemToLeafError {
        get {
            return ResourceManager.GetString("CopyContainerItemToLeafError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Container cannot be copied to another container. The -Recurse or -Container parameter is not specified..
    /// </summary>
    internal static string CopyContainerToContainerWithoutRecurseOrContainer {
        get {
            return ResourceManager.GetString("CopyContainerToContainerWithoutRecurseOrContainer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot copy item. Item at the path &apos;{0}&apos; does not exist..
    /// </summary>
    internal static string CopyItemDoesntExist {
        get {
            return ResourceManager.GetString("CopyItemDoesntExist", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the CopyItem operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string CopyItemDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("CopyItemDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &apos;-{0}&apos; and &apos;-{1}&apos; are mutually exclusive and cannot be specified at the same time..
    /// </summary>
    internal static string CopyItemFromSessionToSession {
        get {
            return ResourceManager.GetString("CopyItemFromSessionToSession", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the CopyItem operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string CopyItemProviderException {
        get {
            return ResourceManager.GetString("CopyItemProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path &apos;{0}&apos; is not valid. Only absolute paths are supported on remote copy operations..
    /// </summary>
    internal static string CopyItemRemotelyPathIsNotAbsolute {
        get {
            return ResourceManager.GetString("CopyItemRemotelyPathIsNotAbsolute", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &apos;{0}&apos; parameter cannot be null or empty..
    /// </summary>
    internal static string CopyItemRemotelyPathIsNullOrEmpty {
        get {
            return ResourceManager.GetString("CopyItemRemotelyPathIsNullOrEmpty", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot perform operation because the session {0} is set to {1}..
    /// </summary>
    internal static string CopyItemSessionProperties {
        get {
            return ResourceManager.GetString("CopyItemSessionProperties", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Source and destination path did not resolve to the same provider..
    /// </summary>
    internal static string CopyItemSourceAndDestinationNotSameProvider {
        get {
            return ResourceManager.GetString("CopyItemSourceAndDestinationNotSameProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot validate remote path &apos;{0}&apos;..
    /// </summary>
    internal static string CopyItemValidateRemotePath {
        get {
            return ResourceManager.GetString("CopyItemValidateRemotePath", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the CopyProperty operation cannot be retrieved for the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string CopyPropertyDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("CopyPropertyDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the CopyProperty operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string CopyPropertyProviderException {
        get {
            return ResourceManager.GetString("CopyPropertyProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The provider does not support the use of credentials. Perform the operation again without specifying credentials..
    /// </summary>
    internal static string Credentials_NotSupported {
        get {
            return ResourceManager.GetString("Credentials_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to References to the null variable always return the null value. Assignments have no effect..
    /// </summary>
    internal static string DollarNullDescription {
        get {
            return ResourceManager.GetString("DollarNullDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A drive with the name &apos;{0}&apos; already exists..
    /// </summary>
    internal static string DriveAlreadyExists {
        get {
            return ResourceManager.GetString("DriveAlreadyExists", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to DriveCmdletProvider methods are not supported by this provider..
    /// </summary>
    internal static string DriveCmdletProvider_NotSupported {
        get {
            return ResourceManager.GetString("DriveCmdletProvider_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot process the drive name because the drive name contains one or more of the following characters that are not valid: ; ~ / \ . :.
    /// </summary>
    internal static string DriveNameIllegalCharacters {
        get {
            return ResourceManager.GetString("DriveNameIllegalCharacters", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find drive. A drive with the name &apos;{0}&apos; does not exist..
    /// </summary>
    internal static string DriveNotFound {
        get {
            return ResourceManager.GetString("DriveNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Drive {0} cannot be created because drive capacity {1} has been exceeded for this scope..
    /// </summary>
    internal static string DriveOverflow {
        get {
            return ResourceManager.GetString("DriveOverflow", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Drive &apos;{0}&apos; cannot be removed because the provider &apos;{1}&apos; prevented it..
    /// </summary>
    internal static string DriveRemovalPreventedByProvider {
        get {
            return ResourceManager.GetString("DriveRemovalPreventedByProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Drive that contains a view of the environment variables for the process.
    /// </summary>
    internal static string EnvironmentDriveDescription {
        get {
            return ResourceManager.GetString("EnvironmentDriveDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The cmdlet provider cannot stream the results because no cmdlet was specified through which to stream the error..
    /// </summary>
    internal static string ErrorStreamingNotEnabled {
        get {
            return ResourceManager.GetString("ErrorStreamingNotEnabled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The FileSystem provider supports credentials only on the New-PSDrive cmdlet. Perform the operation again without specifying credentials..
    /// </summary>
    internal static string FileSystemProviderCredentials_NotSupported {
        get {
            return ResourceManager.GetString("FileSystemProviderCredentials_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot call method. The provider does not support the use of filters..
    /// </summary>
    internal static string Filter_NotSupported {
        get {
            return ResourceManager.GetString("Filter_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The AllScope option cannot be removed from the filter &apos;{0}&apos;..
    /// </summary>
    internal static string FilterAllScopeOptionCannotBeRemoved {
        get {
            return ResourceManager.GetString("FilterAllScopeOptionCannotBeRemoved", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Existing filter {0} cannot be made constant. Filters can be made constant only at creation time..
    /// </summary>
    internal static string FilterCannotBeMadeConstant {
        get {
            return ResourceManager.GetString("FilterCannotBeMadeConstant", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Filter {0} cannot be modified because it is constant..
    /// </summary>
    internal static string FilterIsConstant {
        get {
            return ResourceManager.GetString("FilterIsConstant", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Filter {0} cannot be modified because it is read-only..
    /// </summary>
    internal static string FilterIsReadOnly {
        get {
            return ResourceManager.GetString("FilterIsReadOnly", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The AllScope option cannot be removed from the function &apos;{0}&apos;..
    /// </summary>
    internal static string FunctionAllScopeOptionCannotBeRemoved {
        get {
            return ResourceManager.GetString("FunctionAllScopeOptionCannotBeRemoved", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Existing function {0} cannot be made constant. Functions can be made constant only at creation time..
    /// </summary>
    internal static string FunctionCannotBeMadeConstant {
        get {
            return ResourceManager.GetString("FunctionCannotBeMadeConstant", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Drive that contains a view of the functions stored in a session state.
    /// </summary>
    internal static string FunctionDriveDescription {
        get {
            return ResourceManager.GetString("FunctionDriveDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot modify function {0} because it is constant..
    /// </summary>
    internal static string FunctionIsConstant {
        get {
            return ResourceManager.GetString("FunctionIsConstant", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot modify function {0} because it is read-only..
    /// </summary>
    internal static string FunctionIsReadOnly {
        get {
            return ResourceManager.GetString("FunctionIsReadOnly", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove function {0} because it is constant..
    /// </summary>
    internal static string FunctionNotRemovable {
        get {
            return ResourceManager.GetString("FunctionNotRemovable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot write to function {0} because it is read-only or constant..
    /// </summary>
    internal static string FunctionNotWritable {
        get {
            return ResourceManager.GetString("FunctionNotWritable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Function {0} cannot be created because function capacity {1} has been exceeded for this scope..
    /// </summary>
    internal static string FunctionOverflow {
        get {
            return ResourceManager.GetString("FunctionOverflow", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the GetChildName operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetChildNameProviderException {
        get {
            return ResourceManager.GetString("GetChildNameProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the GetChildNames operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetChildNamesDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("GetChildNamesDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the GetChildNames operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetChildNamesProviderException {
        get {
            return ResourceManager.GetString("GetChildNamesProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the GetChildItems operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetChildrenDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("GetChildrenDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the GetChildItems operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetChildrenProviderException {
        get {
            return ResourceManager.GetString("GetChildrenProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The parameters {0} and {1} cannot be used together. Please specify only one parameter..
    /// </summary>
    internal static string GetContent_TailAndHeadCannotCoexist {
        get {
            return ResourceManager.GetString("GetContent_TailAndHeadCannotCoexist", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Tail parameter currently is supported only for the FileSystem provider..
    /// </summary>
    internal static string GetContent_TailNotSupported {
        get {
            return ResourceManager.GetString("GetContent_TailNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the GetContentReader operation cannot be retrieved for the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetContentReaderDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("GetContentReaderDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Content reader cannot be retrieved for the &apos;{0}&apos; provider for the path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetContentReaderProviderException {
        get {
            return ResourceManager.GetString("GetContentReaderProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the GetContentWriter operation cannot be retrieved for the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetContentWriterDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("GetContentWriterDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Content writer cannot be retrieved for the &apos;{0}&apos; provider for the path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetContentWriterProviderException {
        get {
            return ResourceManager.GetString("GetContentWriterProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the GetItem operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetItemDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("GetItemDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the GetItem operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetItemProviderException {
        get {
            return ResourceManager.GetString("GetItemProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the GetParentPath operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetParentPathProviderException {
        get {
            return ResourceManager.GetString("GetParentPathProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the GetProperty operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetPropertyDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("GetPropertyDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the GetProperty operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetPropertyProviderException {
        get {
            return ResourceManager.GetString("GetPropertyProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the GetSecurityDescriptor operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string GetSecurityDescriptorProviderException {
        get {
            return ResourceManager.GetString("GetSecurityDescriptorProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Global scope cannot be removed..
    /// </summary>
    internal static string GlobalScopeCannotRemove {
        get {
            return ResourceManager.GetString("GlobalScopeCannotRemove", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the HasChildItems operation on the &apos;{0}&apos; provider failed for the path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string HasChildItemsProviderException {
        get {
            return ResourceManager.GetString("HasChildItemsProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Home location for this provider is not set. To set the home location, call &quot;(get-psprovider &apos;{0}&apos;).Home = &apos;path&apos;&quot;..
    /// </summary>
    internal static string HomePathNotSet {
        get {
            return ResourceManager.GetString("HomePathNotSet", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot perform the ClearContent operation. The ClearContent operation is not supported by this provider..
    /// </summary>
    internal static string IContent_Clear_NotSupported {
        get {
            return ResourceManager.GetString("IContent_Clear_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot call method. The content Seek method is not supported by this provider..
    /// </summary>
    internal static string IContent_Seek_NotSupported {
        get {
            return ResourceManager.GetString("IContent_Seek_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot use interface. The IContentCmdletProvider interface is not implemented by this provider..
    /// </summary>
    internal static string IContentCmdletProvider_NotSupported {
        get {
            return ResourceManager.GetString("IContentCmdletProvider_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot use interface. The IDynamicPropertyCmdletProvider interface is not implemented by this provider..
    /// </summary>
    internal static string IDynamicPropertyCmdletProvider_NotSupported {
        get {
            return ResourceManager.GetString("IDynamicPropertyCmdletProvider_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the InitializeDefaultDrives operation on the &apos;{0}&apos; provider failed..
    /// </summary>
    internal static string InitializeDefaultDrivesException {
        get {
            return ResourceManager.GetString("InitializeDefaultDrivesException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot process the returned information because the information returned from the provider&apos;s Start method was for a different provider than the one passed..
    /// </summary>
    internal static string InvalidProviderInfo {
        get {
            return ResourceManager.GetString("InvalidProviderInfo", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot process the returned information because the information returned from the provider&apos;s Start method was null..
    /// </summary>
    internal static string InvalidProviderInfoNull {
        get {
            return ResourceManager.GetString("InvalidProviderInfoNull", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the InvokeDefaultAction operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string InvokeDefaultActionDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("InvokeDefaultActionDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the InvokeDefaultAction operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string InvokeDefaultActionProviderException {
        get {
            return ResourceManager.GetString("InvokeDefaultActionProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot use interface. The IPropertyCmdletProvider interface is not supported by this provider..
    /// </summary>
    internal static string IPropertyCmdletProvider_NotSupported {
        get {
            return ResourceManager.GetString("IPropertyCmdletProvider_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the IsItemContainer cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string IsItemContainerDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("IsItemContainerDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the IsItemContainer operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string IsItemContainerProviderException {
        get {
            return ResourceManager.GetString("IsItemContainerProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the IsValidPath operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string IsValidPathProviderException {
        get {
            return ResourceManager.GetString("IsValidPathProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot call methods. The ItemCmdletProvider methods are not supported by this provider..
    /// </summary>
    internal static string ItemCmdletProvider_NotSupported {
        get {
            return ResourceManager.GetString("ItemCmdletProvider_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the ItemExists operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ItemExistsDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("ItemExistsDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the ItemExists operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ItemExistsProviderException {
        get {
            return ResourceManager.GetString("ItemExistsProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the MakePath operation operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string MakePathProviderException {
        get {
            return ResourceManager.GetString("MakePathProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Maximum number of aliases allowed in a session.
    /// </summary>
    internal static string MaxAliasCountDescription {
        get {
            return ResourceManager.GetString("MaxAliasCountDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Maximum number of drives allowed in a session.
    /// </summary>
    internal static string MaxDriveCountDescription {
        get {
            return ResourceManager.GetString("MaxDriveCountDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Maximum number of errors to retain in a session.
    /// </summary>
    internal static string MaxErrorCountDescription {
        get {
            return ResourceManager.GetString("MaxErrorCountDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Maximum number of functions allowed in a session.
    /// </summary>
    internal static string MaxFunctionCountDescription {
        get {
            return ResourceManager.GetString("MaxFunctionCountDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Maximum number of history objects to retain in a session.
    /// </summary>
    internal static string MaxHistoryCountDescription {
        get {
            return ResourceManager.GetString("MaxHistoryCountDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Maximum number of variables allowed in a session.
    /// </summary>
    internal static string MaxVariableCountDescription {
        get {
            return ResourceManager.GetString("MaxVariableCountDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the MoveItem operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string MoveItemDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("MoveItemDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot move the item because the destination resolved to multiple paths. Specify a destination path that resolves to a single destination and try again..
    /// </summary>
    internal static string MoveItemOneDestination {
        get {
            return ResourceManager.GetString("MoveItemOneDestination", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot move the item because the source path points to one or more items and the destination path is not a container. Validate that the destination path is a container and try again..
    /// </summary>
    internal static string MoveItemPathMultipleDestinationNotContainer {
        get {
            return ResourceManager.GetString("MoveItemPathMultipleDestinationNotContainer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the MoveItem operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string MoveItemProviderException {
        get {
            return ResourceManager.GetString("MoveItemProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot move the item because the source and destination paths did not resolve to the same provider..
    /// </summary>
    internal static string MoveItemSourceAndDestinationNotSameProvider {
        get {
            return ResourceManager.GetString("MoveItemSourceAndDestinationNotSameProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot move the item because the destination path can resolve only to a single path..
    /// </summary>
    internal static string MovePropertyDestinationResolveToSingle {
        get {
            return ResourceManager.GetString("MovePropertyDestinationResolveToSingle", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the MoveProperty operation cannot be retrieved for the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string MovePropertyDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("MovePropertyDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the MoveProperty operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string MovePropertyProviderException {
        get {
            return ResourceManager.GetString("MovePropertyProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path does not refer to a file system path..
    /// </summary>
    internal static string MustBeFileSystemPath {
        get {
            return ResourceManager.GetString("MustBeFileSystemPath", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot access the command &apos;{0}&apos; because it is a private command..
    /// </summary>
    internal static string NamedCommandIsPrivate {
        get {
            return ResourceManager.GetString("NamedCommandIsPrivate", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The NavigationCmdletProvider methods are not supported by this provider..
    /// </summary>
    internal static string NavigationCmdletProvider_NotSupported {
        get {
            return ResourceManager.GetString("NavigationCmdletProvider_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot create drive. The provider does not support the use of credentials..
    /// </summary>
    internal static string NewDriveCredentials_NotSupported {
        get {
            return ResourceManager.GetString("NewDriveCredentials_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dynamic parameters for NewDrive cannot be retrieved for the &apos;{0}&apos; provider. {1}.
    /// </summary>
    internal static string NewDriveDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("NewDriveDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the NewDrive operation on the &apos;{0}&apos; provider failed for the drive with root &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string NewDriveProviderException {
        get {
            return ResourceManager.GetString("NewDriveProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to New drive creation failed because the provider does not allow the creation of the new drive..
    /// </summary>
    internal static string NewDriveProviderFailed {
        get {
            return ResourceManager.GetString("NewDriveProviderFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The item at path &apos;{0}&apos; already exists..
    /// </summary>
    internal static string NewItemAlreadyExists {
        get {
            return ResourceManager.GetString("NewItemAlreadyExists", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The root of the drive &apos;{0}&apos; cannot be modified..
    /// </summary>
    internal static string NewItemCannotModifyDriveRoot {
        get {
            return ResourceManager.GetString("NewItemCannotModifyDriveRoot", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot create new drive because the name specified in the PSDriveInfo &apos;{0}&apos; does not match the drive name specified in the path &apos;{1}&apos;..
    /// </summary>
    internal static string NewItemDriveNameConflict {
        get {
            return ResourceManager.GetString("NewItemDriveNameConflict", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the NewItem operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string NewItemDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("NewItemDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the NewItem operation on the &apos;{0}&apos; provider failed for the path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string NewItemProviderException {
        get {
            return ResourceManager.GetString("NewItemProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The provider name specified in the PSDriveInfo &apos;{0}&apos; does not match the provider name specified in the path &apos;{1}&apos;..
    /// </summary>
    internal static string NewItemProviderNameConflict {
        get {
            return ResourceManager.GetString("NewItemProviderNameConflict", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot create a new drive because type &apos;{0}&apos; is not of type &quot;drive&quot;..
    /// </summary>
    internal static string NewItemTypeDrive {
        get {
            return ResourceManager.GetString("NewItemTypeDrive", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot create a new provider because type &apos;{0}&apos; is not of type &quot;provider&quot;..
    /// </summary>
    internal static string NewItemTypeProvider {
        get {
            return ResourceManager.GetString("NewItemTypeProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot set the new item value because the parameter &quot;value&quot; must be of the type ProviderInfo when &quot;type&quot; is specified as &quot;provider&quot;..
    /// </summary>
    internal static string NewItemValueMustBeProviderInfo {
        get {
            return ResourceManager.GetString("NewItemValueMustBeProviderInfo", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot set new item value because the parameter &quot;value&quot; must be of type PSDriveInfo when &quot;type&quot; is specified as &quot;drive&quot;..
    /// </summary>
    internal static string NewItemValueMustBePSDriveInfo {
        get {
            return ResourceManager.GetString("NewItemValueMustBePSDriveInfo", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Item &apos;{0}&apos; cannot be created because the value was not specified..
    /// </summary>
    internal static string NewItemValueNotSpecified {
        get {
            return ResourceManager.GetString("NewItemValueNotSpecified", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the NewProperty operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string NewPropertyDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("NewPropertyDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the NewProperty operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string NewPropertyProviderException {
        get {
            return ResourceManager.GetString("NewPropertyProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path &apos;{0}&apos; is shorter than the base path &apos;{1}&apos;..
    /// </summary>
    internal static string NormalizeRelativePathLengthLessThanBase {
        get {
            return ResourceManager.GetString("NormalizeRelativePathLengthLessThanBase", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path &apos;{0}&apos; referred to an item that was outside the base &apos;{1}&apos;..
    /// </summary>
    internal static string NormalizeRelativePathOutsideBase {
        get {
            return ResourceManager.GetString("NormalizeRelativePathOutsideBase", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the NormalizeRelativePath operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string NormalizeRelativePathProviderException {
        get {
            return ResourceManager.GetString("NormalizeRelativePathProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path is not in the correct format. Provider paths must contain a provider Id, followed by &quot;::&quot;, followed by a provider specific path..
    /// </summary>
    internal static string NotProviderQualifiedPath {
        get {
            return ResourceManager.GetString("NotProviderQualifiedPath", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot compare PSDriveInfo. A PSDriveInfo instance can be compared only to another PSDriveInfo instance..
    /// </summary>
    internal static string OnlyAbleToComparePSDriveInfo {
        get {
            return ResourceManager.GetString("OnlyAbleToComparePSDriveInfo", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The cmdlet provider cannot stream the results because no cmdlet was specified through which to stream the output..
    /// </summary>
    internal static string OutputStreamingNotEnabled {
        get {
            return ResourceManager.GetString("OutputStreamingNotEnabled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find path &apos;{0}&apos; because it does not exist..
    /// </summary>
    internal static string PathNotFound {
        get {
            return ResourceManager.GetString("PathNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot set the location because path &apos;{0}&apos; resolved to multiple containers. You can only the set location to a single container at a time..
    /// </summary>
    internal static string PathResolvedToMultiple {
        get {
            return ResourceManager.GetString("PathResolvedToMultiple", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The provider &apos;{0}&apos; cannot be used to get or set data using the variable syntax. {2}.
    /// </summary>
    internal static string ProviderCannotBeUsedAsVariable {
        get {
            return ResourceManager.GetString("ProviderCannotBeUsedAsVariable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The invocation of Close on the &apos;{0}&apos; provider&apos;s content reader or writer failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ProviderContentCloseError {
        get {
            return ResourceManager.GetString("ProviderContentCloseError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The invocation of Read on the &apos;{0}&apos; provider&apos;s content reader failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ProviderContentReadError {
        get {
            return ResourceManager.GetString("ProviderContentReadError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The invocation of Write on the &apos;{0}&apos; provider&apos;s content writer failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ProviderContentWriteError {
        get {
            return ResourceManager.GetString("ProviderContentWriteError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An error occurred attempting to create an instance of the provider &apos;{0}&apos;. {1} .
    /// </summary>
    internal static string ProviderCtorException {
        get {
            return ResourceManager.GetString("ProviderCtorException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Drive that contains the list of loaded providers and their drives.
    /// </summary>
    internal static string ProviderDriveDescription {
        get {
            return ResourceManager.GetString("ProviderDriveDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The provider &apos;{0}&apos; cannot be used to resolve the path &apos;{1}&apos; because of an error in the provider..
    /// </summary>
    internal static string ProviderImplementationInconsistent {
        get {
            return ResourceManager.GetString("ProviderImplementationInconsistent", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &apos;{0}&apos; resolved to more than one provider name. Possible matches include:{1}..
    /// </summary>
    internal static string ProviderNameAmbiguous {
        get {
            return ResourceManager.GetString("ProviderNameAmbiguous", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified provider name &apos;{0}&apos; cannot be used because it contains one or more of the following characters that are not valid: \ [ ] ? * :.
    /// </summary>
    internal static string ProviderNameNotValid {
        get {
            return ResourceManager.GetString("ProviderNameNotValid", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find a provider with the name &apos;{0}&apos;..
    /// </summary>
    internal static string ProviderNotFound {
        get {
            return ResourceManager.GetString("ProviderNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find a provider with the name &apos;{0}&apos;. The name is not in the proper format. A provider name can only be alphanumeric characters, or a Windows PowerShell snap-in name that is followed by a single &apos;\&apos;, followed by alphanumeric characters..
    /// </summary>
    internal static string ProviderNotFoundBadFormat {
        get {
            return ResourceManager.GetString("ProviderNotFoundBadFormat", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An error occurred attempting to create an instance of the provider. The provider type name of &apos;{0}&apos; could not be found in the assembly..
    /// </summary>
    internal static string ProviderNotFoundInAssembly {
        get {
            return ResourceManager.GetString("ProviderNotFoundInAssembly", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot create provider because creation of new providers is not supported..
    /// </summary>
    internal static string ProviderProviderCannotCreateProvider {
        get {
            return ResourceManager.GetString("ProviderProviderCannotCreateProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove provider because removal of providers is not supported..
    /// </summary>
    internal static string ProviderProviderCannotRemoveProvider {
        get {
            return ResourceManager.GetString("ProviderProviderCannotRemoveProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path is not in the correct format. Paths can contain only provider and drive names separated by slashes or backslashes..
    /// </summary>
    internal static string ProviderProviderPathFormatException {
        get {
            return ResourceManager.GetString("ProviderProviderPathFormatException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The invocation of Seek on the &apos;{0}&apos; provider&apos;s content writer failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string ProviderSeekError {
        get {
            return ResourceManager.GetString("ProviderSeekError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the Start operation on the &apos;{0}&apos; provider failed. {1}.
    /// </summary>
    internal static string ProviderStartException {
        get {
            return ResourceManager.GetString("ProviderStartException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The variable syntax cannot be used to get or set data in the provider. {2}.
    /// </summary>
    internal static string ProviderVariableSyntaxInvalid {
        get {
            return ResourceManager.GetString("ProviderVariableSyntaxInvalid", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The invocation of RemoveDrive on the &apos;{0}&apos; provider failed. {1}.
    /// </summary>
    internal static string RemoveDriveProviderException {
        get {
            return ResourceManager.GetString("RemoveDriveProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove the drive root in this way. Use &quot;Remove-PSDrive&quot; to remove this drive..
    /// </summary>
    internal static string RemoveDriveRoot {
        get {
            return ResourceManager.GetString("RemoveDriveRoot", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove provider {0}. All drives associated with provider {0} must be removed before provider {0} can be removed..
    /// </summary>
    internal static string RemoveDrivesBeforeRemovingProvider {
        get {
            return ResourceManager.GetString("RemoveDrivesBeforeRemovingProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the RemoveItem operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string RemoveItemDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("RemoveItemDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the RemoveItem operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string RemoveItemProviderException {
        get {
            return ResourceManager.GetString("RemoveItemProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the RemoveProperty operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string RemovePropertyDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("RemovePropertyDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the RemoveProperty operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string RemovePropertyProviderException {
        get {
            return ResourceManager.GetString("RemovePropertyProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The item at the path &apos;{0}&apos; does not exist..
    /// </summary>
    internal static string RenameItemDoesntExist {
        get {
            return ResourceManager.GetString("RenameItemDoesntExist", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the RenameItem operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string RenameItemDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("RenameItemDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the RenameItem operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string RenameItemProviderException {
        get {
            return ResourceManager.GetString("RenameItemProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot rename item because the path resolved to multiple items. Only one item can be renamed at a time..
    /// </summary>
    internal static string RenameMultipleItemError {
        get {
            return ResourceManager.GetString("RenameMultipleItemError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dynamic parameters for RenameProperty cannot be retrieved for the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string RenamePropertyDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("RenamePropertyDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the RenameProperty operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string RenamePropertyProviderException {
        get {
            return ResourceManager.GetString("RenamePropertyProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot access the session state resource because it is a private resource. .
    /// </summary>
    internal static string ResourceIsPrivate {
        get {
            return ResourceManager.GetString("ResourceIsPrivate", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Too many scopes have been created..
    /// </summary>
    internal static string ScopeDepthOverflow {
        get {
            return ResourceManager.GetString("ScopeDepthOverflow", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The function definition &apos;{0}&apos; contained a scope qualifier but no function name..
    /// </summary>
    internal static string ScopedFunctionMustHaveName {
        get {
            return ResourceManager.GetString("ScopedFunctionMustHaveName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The scope number &apos;{0}&apos; exceeds the number of active scopes..
    /// </summary>
    internal static string ScopeIDExceedsAvailableScopes {
        get {
            return ResourceManager.GetString("ScopeIDExceedsAvailableScopes", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This provider does not support security descriptor related operations..
    /// </summary>
    internal static string SecurityDescriptorInterfaceNotSupported {
        get {
            return ResourceManager.GetString("SecurityDescriptorInterfaceNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the SetItem operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string SetItemDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("SetItemDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the SetItem operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string SetItemProviderException {
        get {
            return ResourceManager.GetString("SetItemProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The dynamic parameters for the SetProperty operation cannot be retrieved from the &apos;{0}&apos; provider for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string SetPropertyDynamicParametersProviderException {
        get {
            return ResourceManager.GetString("SetPropertyDynamicParametersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the SetProperty operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string SetPropertyProviderException {
        get {
            return ResourceManager.GetString("SetPropertyProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the SetSecurityDescriptor operation on the &apos;{0}&apos; provider failed for path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string SetSecurityDescriptorProviderException {
        get {
            return ResourceManager.GetString("SetSecurityDescriptorProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The provided value &apos;{0}&apos; resolved to more than one location stack..
    /// </summary>
    internal static string StackNameResolvedToMultiple {
        get {
            return ResourceManager.GetString("StackNameResolvedToMultiple", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find location stack &apos;{0}&apos;. It does not exist or it is not a container..
    /// </summary>
    internal static string StackNotFound {
        get {
            return ResourceManager.GetString("StackNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to perform the StartDynamicParameters operation on the &apos;{0}&apos; provider failed for the path &apos;{1}&apos;. {2}.
    /// </summary>
    internal static string StartDynamicParmatersProviderException {
        get {
            return ResourceManager.GetString("StartDynamicParmatersProviderException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find a trace source with the name &apos;{0}&apos;..
    /// </summary>
    internal static string TraceSourceNotFound {
        get {
            return ResourceManager.GetString("TraceSourceNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The provider does not support transactions. Perform the operation again without the -UseTransaction parameter..
    /// </summary>
    internal static string Transactions_NotSupported {
        get {
            return ResourceManager.GetString("Transactions_NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The AllScope option cannot be removed from the variable &apos;{0}&apos;..
    /// </summary>
    internal static string VariableAllScopeOptionCannotBeRemoved {
        get {
            return ResourceManager.GetString("VariableAllScopeOptionCannotBeRemoved", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A variable with name &apos;{0}&apos; already exists..
    /// </summary>
    internal static string VariableAlreadyExists {
        get {
            return ResourceManager.GetString("VariableAlreadyExists", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Existing variable {0} cannot be made constant. Variables can be made constant only at creation time..
    /// </summary>
    internal static string VariableCannotBeMadeConstant {
        get {
            return ResourceManager.GetString("VariableCannotBeMadeConstant", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Drive that contains a view of those variables stored in a session state.
    /// </summary>
    internal static string VariableDriveDescription {
        get {
            return ResourceManager.GetString("VariableDriveDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot modify variable {0} because it is a constant..
    /// </summary>
    internal static string VariableIsConstant {
        get {
            return ResourceManager.GetString("VariableIsConstant", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot access the variable &apos;${0}&apos; because it is a private variable..
    /// </summary>
    internal static string VariableIsPrivate {
        get {
            return ResourceManager.GetString("VariableIsPrivate", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find a variable with the name &apos;{0}&apos;..
    /// </summary>
    internal static string VariableNotFound {
        get {
            return ResourceManager.GetString("VariableNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove variable {0} because it is constant or read-only. If the variable is read-only, try the operation again specifying the Force option..
    /// </summary>
    internal static string VariableNotRemovable {
        get {
            return ResourceManager.GetString("VariableNotRemovable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove variable {0} because the variable has been optimized and is not removable. Try using the Remove-Variable cmdlet (without any aliases), or dot-sourcing the command that you are using to remove the variable..
    /// </summary>
    internal static string VariableNotRemovableRare {
        get {
            return ResourceManager.GetString("VariableNotRemovableRare", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove variable {0} because it is owned by the system..
    /// </summary>
    internal static string VariableNotRemovableSystem {
        get {
            return ResourceManager.GetString("VariableNotRemovableSystem", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot overwrite variable {0} because it is read-only or constant..
    /// </summary>
    internal static string VariableNotWritable {
        get {
            return ResourceManager.GetString("VariableNotWritable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot overwrite variable {0} because the variable has been optimized. Try using the New-Variable or Set-Variable cmdlet (without any aliases), or dot-source the command that you are using to set the variable..
    /// </summary>
    internal static string VariableNotWritableRare {
        get {
            return ResourceManager.GetString("VariableNotWritableRare", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot set options on the local variable {0}. Use New-Variable to create a variable that allows options to be set..
    /// </summary>
    internal static string VariableOptionsNotSettable {
        get {
            return ResourceManager.GetString("VariableOptionsNotSettable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot create variable {0} because variable capacity {1} is exceeded for this scope..
    /// </summary>
    internal static string VariableOverflow {
        get {
            return ResourceManager.GetString("VariableOverflow", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot process variable because variable path &apos;{0}&apos; resolved to multiple items. You can get or set the variable value only one item at a time..
    /// </summary>
    internal static string VariablePathResolvedToMultiple {
        get {
            return ResourceManager.GetString("VariablePathResolvedToMultiple", resourceCulture);
        }
    }
}
