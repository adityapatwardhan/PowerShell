//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;



/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class PipelineStrings {
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal PipelineStrings() {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PipelineStrings", typeof(PipelineStrings).GetTypeInfo().Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot continue to run the cmdlet because running cmdlets has been prevented by the Stop policy..
    /// </summary>
    internal static string ActionPreferenceStop {
        get {
            return ResourceManager.GetString("ActionPreferenceStop", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An error occurred while creating the pipeline..
    /// </summary>
    internal static string CannotCreatePipeline {
        get {
            return ResourceManager.GetString("CannotCreatePipeline", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot process the cmdlet instance because the cmdlet instance is in use by another pipeline. Please contact Microsoft Customer Support Services..
    /// </summary>
    internal static string CommandProcessorAlreadyUsed {
        get {
            return ResourceManager.GetString("CommandProcessorAlreadyUsed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This pipeline does not support disconnect-connect semantics..
    /// </summary>
    internal static string ConnectNotSupported {
        get {
            return ResourceManager.GetString("ConnectNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot perform the operation because the pipeline is started. Stop the pipeline and try the operation again..
    /// </summary>
    internal static string ExecutionAlreadyStarted {
        get {
            return ResourceManager.GetString("ExecutionAlreadyStarted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot run the pipeline because the first cmdlet in the pipeline is trying to read input from the results of a preceding cmdlet. Either modify the first cmdlet, remove the first cmdlet, or add to the pipeline the cmdlet whose output is required by the first cmdlet, and then try running the pipeline again..
    /// </summary>
    internal static string FirstCommandCannotHaveInput {
        get {
            return ResourceManager.GetString("FirstCommandCannotHaveInput", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot process the cmdlet number. The ReadFromCommand function must specify the Id of a cmdlet that has already been added to the pipeline. Please contact Microsoft Customer Support Services..
    /// </summary>
    internal static string InvalidCommandNumber {
        get {
            return ResourceManager.GetString("InvalidCommandNumber", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The runspace object has a null remote command associated with it.  A disconnected RemotePipeline object cannot be created because there is no remote command specified..
    /// </summary>
    internal static string InvalidRemoteCommand {
        get {
            return ResourceManager.GetString("InvalidRemoteCommand", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot read the output of the ReadFromCommand and ReadErrorQueue functions because another cmdlet is already reading that output. Please contact Microsoft Customer Support Services..
    /// </summary>
    internal static string PipeAlreadyTaken {
        get {
            return ResourceManager.GetString("PipeAlreadyTaken", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot run the pipeline because there are no commands. Add at least one command to the pipeline, and then run it again..
    /// </summary>
    internal static string PipelineExecuteRequiresAtLeastOneCommand {
        get {
            return ResourceManager.GetString("PipelineExecuteRequiresAtLeastOneCommand", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to CommandInvocation({0}): &quot;{1}&quot;.
    /// </summary>
    internal static string PipelineExecutionInformation {
        get {
            return ResourceManager.GetString("PipelineExecutionInformation", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to NonTerminatingError({0}): &quot;{1}&quot;.
    /// </summary>
    internal static string PipelineExecutionNonTerminatingError {
        get {
            return ResourceManager.GetString("PipelineExecutionNonTerminatingError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to ParameterBinding({0}): name=&quot;{1}&quot;; value=&quot;{2}&quot;.
    /// </summary>
    internal static string PipelineExecutionParameterBinding {
        get {
            return ResourceManager.GetString("PipelineExecutionParameterBinding", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to TerminatingError({0}): &quot;{1}&quot;.
    /// </summary>
    internal static string PipelineExecutionTerminatingError {
        get {
            return ResourceManager.GetString("PipelineExecutionTerminatingError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot connect this pipeline because it is not in the disconnected state..
    /// </summary>
    internal static string PipelineNotDisconnected {
        get {
            return ResourceManager.GetString("PipelineNotDisconnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot complete the pipeline operation because it has not yet been started. You must call the Begin() method before calling End() on a steppable pipeline..
    /// </summary>
    internal static string PipelineNotStarted {
        get {
            return ResourceManager.GetString("PipelineNotStarted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A cmdlet threw an exception after calling ThrowTerminatingError.
    ///The first exception was &quot;{0}&quot; with stack trace &quot;{1}&quot;.
    ///The second exception was &quot;{2}&quot; with stack trace &quot;{3}&quot;..
    /// </summary>
    internal static string SecondFailure {
        get {
            return ResourceManager.GetString("SecondFailure", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The WriteObject and WriteError methods cannot be called from outside the overrides of the BeginProcessing, ProcessRecord, and EndProcessing methods, and they can only be called from within the same thread. Validate that the cmdlet makes these calls correctly, or contact Microsoft Customer Support Services..
    /// </summary>
    internal static string WriteNotPermitted {
        get {
            return ResourceManager.GetString("WriteNotPermitted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The WriteObject and WriteError methods cannot be called after the pipeline has been closed. Please contact Microsoft Customer Support Services..
    /// </summary>
    internal static string WriteToClosedPipeline {
        get {
            return ResourceManager.GetString("WriteToClosedPipeline", resourceCulture);
        }
    }
}
