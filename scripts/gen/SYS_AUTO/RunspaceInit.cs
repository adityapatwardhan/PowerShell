//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;



/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class RunspaceInit {
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal RunspaceInit() {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RunspaceInit", typeof(RunspaceInit).GetTypeInfo().Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates when confirmation should be requested. Confirmation is requested when the ConfirmImpact of the operation is equal to or greater than $ConfirmPreference. If $ConfirmPreference is None, actions will only be confirmed when Confirm is specified..
    /// </summary>
    internal static string ConfirmPreferenceDescription {
        get {
            return ResourceManager.GetString("ConfirmPreferenceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name of the current console file.
    /// </summary>
    internal static string ConsoleDescription {
        get {
            return ResourceManager.GetString("ConsoleDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates the action taken when a Debug message is delivered.
    /// </summary>
    internal static string DebugPreferenceDescription {
        get {
            return ResourceManager.GetString("DebugPreferenceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Status of last command.
    /// </summary>
    internal static string DollarHookDescription {
        get {
            return ResourceManager.GetString("DollarHookDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Culture of the current Windows PowerShell session.
    /// </summary>
    internal static string DollarPSCultureDescription {
        get {
            return ResourceManager.GetString("DollarPSCultureDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to UI culture of the current Windows PowerShell session.
    /// </summary>
    internal static string DollarPSUICultureDescription {
        get {
            return ResourceManager.GetString("DollarPSUICultureDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates the action taken when an error message is delivered.
    /// </summary>
    internal static string ErrorActionPreferenceDescription {
        get {
            return ResourceManager.GetString("ErrorActionPreferenceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates the view mode to use when displaying errors.
    /// </summary>
    internal static string ErrorViewDescription {
        get {
            return ResourceManager.GetString("ErrorViewDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The run objects available to cmdlets.
    /// </summary>
    internal static string ExecutionContextDescription {
        get {
            return ResourceManager.GetString("ExecutionContextDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates the limit of enumeration on formatting IEnumerable objects.
    /// </summary>
    internal static string FormatEnunmerationLimitDescription {
        get {
            return ResourceManager.GetString("FormatEnunmerationLimitDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Folder containing the current user&apos;s profile.
    /// </summary>
    internal static string HOMEDescription {
        get {
            return ResourceManager.GetString("HOMEDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates the action taken when a command generates an item in the Information stream.
    /// </summary>
    internal static string InformationPreferenceDescription {
        get {
            return ResourceManager.GetString("InformationPreferenceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The ShellID identifies the current shell.  This is used by #Requires..
    /// </summary>
    internal static string MshShellIdDescription {
        get {
            return ResourceManager.GetString("MshShellIdDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates what type of prompt should be displayed for the current nesting level.
    /// </summary>
    internal static string NestedPromptLevelDescription {
        get {
            return ResourceManager.GetString("NestedPromptLevelDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The text encoding used when piping text to a native executable file.
    /// </summary>
    internal static string OutputEncodingDescription {
        get {
            return ResourceManager.GetString("OutputEncodingDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Press Enter to continue....
    /// </summary>
    internal static string PauseDefinitionString {
        get {
            return ResourceManager.GetString("PauseDefinitionString", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Current process ID.
    /// </summary>
    internal static string PIDDescription {
        get {
            return ResourceManager.GetString("PIDDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parent process ID.
    /// </summary>
    internal static string PPIDDescription {
        get {
            return ResourceManager.GetString("PPIDDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates the action taken when progress records are delivered.
    /// </summary>
    internal static string ProgressPreferenceDescription {
        get {
            return ResourceManager.GetString("ProgressPreferenceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Variable to hold all default &lt;cmdlet:parameter, value&gt; pairs.
    /// </summary>
    internal static string PSDefaultParameterValuesDescription {
        get {
            return ResourceManager.GetString("PSDefaultParameterValuesDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Variable to contain the name of the email server. This can be used instead of the HostName parameter in the Send-MailMessage cmdlet..
    /// </summary>
    internal static string PSEmailServerDescription {
        get {
            return ResourceManager.GetString("PSEmailServerDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parent folder of the host application of the current runspace.
    /// </summary>
    internal static string PSHOMEDescription {
        get {
            return ResourceManager.GetString("PSHOMEDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A reference to the host of the current runspace.
    /// </summary>
    internal static string PSHostDescription {
        get {
            return ResourceManager.GetString("PSHostDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Version information for current Windows PowerShell session.
    /// </summary>
    internal static string PSVersionTableDescription {
        get {
            return ResourceManager.GetString("PSVersionTableDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Displays errors with a description of the error class.
    /// </summary>
    internal static string ReportErrorShowExceptionClassDescription {
        get {
            return ResourceManager.GetString("ReportErrorShowExceptionClassDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Displays errors with inner exceptions.
    /// </summary>
    internal static string ReportErrorShowInnerExceptionDescription {
        get {
            return ResourceManager.GetString("ReportErrorShowInnerExceptionDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Displays errors with their sources.
    /// </summary>
    internal static string ReportErrorShowSourceDescription {
        get {
            return ResourceManager.GetString("ReportErrorShowSourceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Displays errors with a stack trace.
    /// </summary>
    internal static string ReportErrorShowStackTraceDescription {
        get {
            return ResourceManager.GetString("ReportErrorShowStackTraceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates the action taken when a Verbose message is delivered.
    /// </summary>
    internal static string VerbosePreferenceDescription {
        get {
            return ResourceManager.GetString("VerbosePreferenceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Dictates the action taken when a Warning message is delivered.
    /// </summary>
    internal static string WarningPreferenceDescription {
        get {
            return ResourceManager.GetString("WarningPreferenceDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to If true, WhatIf is considered to be enabled for all commands..
    /// </summary>
    internal static string WhatIfPreferenceDescription {
        get {
            return ResourceManager.GetString("WhatIfPreferenceDescription", resourceCulture);
        }
    }
}
