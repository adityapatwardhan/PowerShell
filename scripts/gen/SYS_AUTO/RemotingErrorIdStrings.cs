//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;



/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class RemotingErrorIdStrings {
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal RemotingErrorIdStrings() {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RemotingErrorIdStrings", typeof(RemotingErrorIdStrings).GetTypeInfo().Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to You cannot use the Invoke-Command cmdlet with both the AsJob and Disconnected parameters in the same command..
    /// </summary>
    internal static string AsJobAndDisconnectedError {
        get {
            return ResourceManager.GetString("AsJobAndDisconnectedError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &quot;{0}&quot;, &quot;{1}&quot; must be specified in the &quot;{2}&quot; section to dynamically load the assembly..
    /// </summary>
    internal static string AssemblyLoadAttributesNotFound {
        get {
            return ResourceManager.GetString("AssemblyLoadAttributesNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} authentication requires an explicit user name and password.  Specify the user name and password by using the -Credential parameter and try the command again..
    /// </summary>
    internal static string AuthenticationMechanismRequiresCredential {
        get {
            return ResourceManager.GetString("AuthenticationMechanismRequiresCredential", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The -AutoRemoveJob parameter cannot be used without the -Wait parameter.
    /// </summary>
    internal static string AutoRemoveCannotBeUsedWithoutWait {
        get {
            return ResourceManager.GetString("AutoRemoveCannotBeUsedWithoutWait", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A job could not be created from the {0} specification because the provided runspace is not a local runspace. Try again using a local runspace, or specify a RunspaceMode argument..
    /// </summary>
    internal static string BadRunspaceTypeForJob {
        get {
            return ResourceManager.GetString("BadRunspaceTypeForJob", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Fragment blob length is out of range: {0}.
    /// </summary>
    internal static string BlobLengthNotInRange {
        get {
            return ResourceManager.GetString("BlobLengthNotInRange", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Wait and Keep parameters cannot be used together in the same command..
    /// </summary>
    internal static string BlockCannotBeUsedWithKeep {
        get {
            return ResourceManager.GetString("BlockCannotBeUsedWithKeep", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to open pipe connection for PowerShell in container. Error code: {0}..
    /// </summary>
    internal static string CannotConnectContainerNamedPipe {
        get {
            return ResourceManager.GetString("CannotConnectContainerNamedPipe", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to open pipe connection for PowerShell IPC. Error code: {0}..
    /// </summary>
    internal static string CannotConnectNamedPipe {
        get {
            return ResourceManager.GetString("CannotConnectNamedPipe", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to create PowerShell IPC named pipe. Error code: {0}..
    /// </summary>
    internal static string CannotCreateNamedPipe {
        get {
            return ResourceManager.GetString("CannotCreateNamedPipe", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to launch PowerShell process inside container with id {0}..
    /// </summary>
    internal static string CannotCreateProcessInContainer {
        get {
            return ResourceManager.GetString("CannotCreateProcessInContainer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot create runspace. The language mode for this configuration is incompatible with the system-wide language mode..
    /// </summary>
    internal static string CannotCreateRunspaceInconsistentState {
        get {
            return ResourceManager.GetString("CannotCreateRunspaceInconsistentState", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The job cannot be debugged because the host debugger mode is set to None or Default.  The host debugger mode must be LocalScript and/or RemoteSript..
    /// </summary>
    internal static string CannotDebugJobInvalidDebuggerMode {
        get {
            return ResourceManager.GetString("CannotDebugJobInvalidDebuggerMode", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The job cannot be debugged because there is no PowerShell host debugger available.  Make sure you are running this command in a host that supports debugging..
    /// </summary>
    internal static string CannotDebugJobNoHostDebugger {
        get {
            return ResourceManager.GetString("CannotDebugJobNoHostDebugger", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The job cannot be debugged because there is no host UI available.  Make sure you are running this command in a PowerShell host that implements PSHostUserInterface..
    /// </summary>
    internal static string CannotDebugJobNoHostUI {
        get {
            return ResourceManager.GetString("CannotDebugJobNoHostUI", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The session {0} cannot be disconnected because the specified idle time-out value {1} (seconds) is either greater than the server maximum allowed {2} (seconds), or less than the minimum allowed {3} (seconds).  Specify an idle time-out value that is within the allowed range, and try again..
    /// </summary>
    internal static string CannotDisconnectSessionWithInvalidIdleTimeout {
        get {
            return ResourceManager.GetString("CannotDisconnectSessionWithInvalidIdleTimeout", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot exit a nested pipeline because the pipeline is not in the nested state..
    /// </summary>
    internal static string CannotExitNestedPipeline {
        get {
            return ResourceManager.GetString("CannotExitNestedPipeline", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find job with id {0}..
    /// </summary>
    internal static string CannotFindJobWithId {
        get {
            return ResourceManager.GetString("CannotFindJobWithId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find job with Instance Id {0}..
    /// </summary>
    internal static string CannotFindJobWithInstanceId {
        get {
            return ResourceManager.GetString("CannotFindJobWithInstanceId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find job with name {0}..
    /// </summary>
    internal static string CannotFindJobWithName {
        get {
            return ResourceManager.GetString("CannotFindJobWithName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot connect to session {0}.  The session no longer exists on computer {1}..
    /// </summary>
    internal static string CannotFindSessionForConnect {
        get {
            return ResourceManager.GetString("CannotFindSessionForConnect", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The call to Windows API GetStdHandle to get the Standard Error handle resulted in an error code: {0}..
    /// </summary>
    internal static string CannotGetStdErrHandle {
        get {
            return ResourceManager.GetString("CannotGetStdErrHandle", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The call to Windows API GetStdHandle to get the Standard Input handle resulted in an error code: {0}..
    /// </summary>
    internal static string CannotGetStdInHandle {
        get {
            return ResourceManager.GetString("CannotGetStdInHandle", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The call to Windows API GetStdHandle to get the Standard Output handle resulted in an error code: {0}..
    /// </summary>
    internal static string CannotGetStdOutHandle {
        get {
            return ResourceManager.GetString("CannotGetStdOutHandle", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot invoke a nested command on the remote session because a nested command is already running..
    /// </summary>
    internal static string CannotInvokeNestedCommandNestedCommandRunning {
        get {
            return ResourceManager.GetString("CannotInvokeNestedCommandNestedCommandRunning", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot remove the job because it does not exist or because it is a child job. Child jobs can be removed only by removing the parent job..
    /// </summary>
    internal static string CannotRemoveJob {
        get {
            return ResourceManager.GetString("CannotRemoveJob", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot start job. The language mode for this session is incompatible with the system-wide language mode..
    /// </summary>
    internal static string CannotStartJobInconsistentLanguageMode {
        get {
            return ResourceManager.GetString("CannotStartJobInconsistentLanguageMode", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to terminate PowerShell process with id {0} inside container with id {1}..
    /// </summary>
    internal static string CannotTerminateProcessInContainer {
        get {
            return ResourceManager.GetString("CannotTerminateProcessInContainer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unexpected type of encoded command (expected PSObject, got {0})..
    /// </summary>
    internal static string CantCastCommandToPSObject {
        get {
            return ResourceManager.GetString("CantCastCommandToPSObject", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unexpected type of encoded command parameter (expected PSObject, got {0})..
    /// </summary>
    internal static string CantCastParameterToPSObject {
        get {
            return ResourceManager.GetString("CantCastParameterToPSObject", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unexpected type of {0} property (expected {1}, got {2})..
    /// </summary>
    internal static string CantCastPropertyToExpectedType {
        get {
            return ResourceManager.GetString("CantCastPropertyToExpectedType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unexpected type of remoting data (expected PSObject, got {0})..
    /// </summary>
    internal static string CantCastRemotingDataToPSObject {
        get {
            return ResourceManager.GetString("CantCastRemotingDataToPSObject", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The server did not respond with an encrypted session key within the specified time-out period..
    /// </summary>
    internal static string ClientKeyExchangeFailed {
        get {
            return ResourceManager.GetString("ClientKeyExchangeFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Windows PowerShell client does not support the {0} {1} negotiated by the server. Make sure the server is compatible with the build {2} and the protocol version {3} of Windows PowerShell..
    /// </summary>
    internal static string ClientNegotiationFailed {
        get {
            return ResourceManager.GetString("ClientNegotiationFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The client negotiation timer has expired. The negotiation time-out interval is {0} milliseconds..
    /// </summary>
    internal static string ClientNegotiationTimeout {
        get {
            return ResourceManager.GetString("ClientNegotiationTimeout", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0}. Negotiation with the server failed. Make sure the server is compatible with the build {1} and the protocol version {2} of Windows PowerShell..
    /// </summary>
    internal static string ClientNotFoundCapabilityProperties {
        get {
            return ResourceManager.GetString("ClientNotFoundCapabilityProperties", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Client side receive call failed..
    /// </summary>
    internal static string ClientReceiveFailed {
        get {
            return ResourceManager.GetString("ClientReceiveFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The client computer has sent a request to close the session..
    /// </summary>
    internal static string ClientRequestedToCloseSession {
        get {
            return ResourceManager.GetString("ClientRequestedToCloseSession", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Client side send call failed..
    /// </summary>
    internal static string ClientSendFailed {
        get {
            return ResourceManager.GetString("ClientSendFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The session is closed..
    /// </summary>
    internal static string CloseCompleted {
        get {
            return ResourceManager.GetString("CloseCompleted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Closing the remote server shell instance failed with the following error message : {0}.
    /// </summary>
    internal static string CloseExCallBackError {
        get {
            return ResourceManager.GetString("CloseExCallBackError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Could not close the session..
    /// </summary>
    internal static string CloseFailed {
        get {
            return ResourceManager.GetString("CloseFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to close the session..
    /// </summary>
    internal static string CloseIsCalled {
        get {
            return ResourceManager.GetString("CloseIsCalled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command handle returned from the WinRS API WSManRunShellCommand is null..
    /// </summary>
    internal static string CommandHandleIsNull {
        get {
            return ResourceManager.GetString("CommandHandleIsNull", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Processing data for a remote command failed with the following error message: {0}.
    /// </summary>
    internal static string CommandReceiveExCallBackError {
        get {
            return ResourceManager.GetString("CommandReceiveExCallBackError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Receiving data for a remote command failed..
    /// </summary>
    internal static string CommandReceiveExFailed {
        get {
            return ResourceManager.GetString("CommandReceiveExFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Sending data to a remote command failed with the following error message: {0}.
    /// </summary>
    internal static string CommandSendExCallBackError {
        get {
            return ResourceManager.GetString("CommandSendExCallBackError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Sending data to a remote command failed..
    /// </summary>
    internal static string CommandSendExFailed {
        get {
            return ResourceManager.GetString("CommandSendExFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot retrieve the jobs of the specified computers. The ComputerName parameter can be used only with jobs created by using Windows PowerShell remoting..
    /// </summary>
    internal static string ComputerNameParamNotSupported {
        get {
            return ResourceManager.GetString("ComputerNameParamNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Connecting to remote server {0} failed with the following error message : {1}.
    /// </summary>
    internal static string ConnectExCallBackError {
        get {
            return ResourceManager.GetString("ConnectExCallBackError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Connecting to remote server {0} failed..
    /// </summary>
    internal static string ConnectExFailed {
        get {
            return ResourceManager.GetString("ConnectExFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Connection attempt failed..
    /// </summary>
    internal static string ConnectFailed {
        get {
            return ResourceManager.GetString("ConnectFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Timeout expired before connection could be made to named pipe..
    /// </summary>
    internal static string ConnectNamedPipeTimeout {
        get {
            return ResourceManager.GetString("ConnectNamedPipeTimeout", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Containers feature may not be enabled on this machine..
    /// </summary>
    internal static string ContainersFeatureNotEnabled {
        get {
            return ResourceManager.GetString("ContainersFeatureNotEnabled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Could not find the role capability, &apos;{0}&apos;. The role capability must be a file named &apos;{1}&apos; within a &apos;RoleCapabilities&apos; directory in a module in the current module path..
    /// </summary>
    internal static string CouldNotFindRoleCapability {
        get {
            return ResourceManager.GetString("CouldNotFindRoleCapability", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Could not grant remote access to &apos;{0}&apos;: &apos;{1}&apos;. The session configuration has been registered, but this group does not have access. To resolve this error, provide a valid group name and register the session configuration again..
    /// </summary>
    internal static string CouldNotResolveRoleDefinitionPrincipal {
        get {
            return ResourceManager.GetString("CouldNotResolveRoleDefinitionPrincipal", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Could not resolve username &apos;{0}&apos;. Verify the username and try again..
    /// </summary>
    internal static string CouldNotResolveUsername {
        get {
            return ResourceManager.GetString("CouldNotResolveUsername", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} is not a valid value for the parameter {1}. The value must be greater than or equal to 0..
    /// </summary>
    internal static string CSCDoubleParameterOutOfRange {
        get {
            return ResourceManager.GetString("CSCDoubleParameterOutOfRange", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Session configuration &quot;{0}&quot; was not found..
    /// </summary>
    internal static string CSCmdsShellNotFound {
        get {
            return ResourceManager.GetString("CSCmdsShellNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Session configuration &quot;{0}&quot; is not a Windows PowerShell-based shell..
    /// </summary>
    internal static string CSCmdsShellNotPowerShellBased {
        get {
            return ResourceManager.GetString("CSCmdsShellNotPowerShellBased", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Either &quot;{0}&quot; and &quot;{1}&quot; must both be specified, or neither must not be specified..
    /// </summary>
    internal static string CSCmdsTypeNeedsAssembly {
        get {
            return ResourceManager.GetString("CSCmdsTypeNeedsAssembly", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0}.
    /// </summary>
    internal static string CSShouldProcessAction {
        get {
            return ResourceManager.GetString("CSShouldProcessAction", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name: {0}.
    /// </summary>
    internal static string CSShouldProcessTarget {
        get {
            return ResourceManager.GetString("CSShouldProcessTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name: {0}. This lets administrators remotely run Windows PowerShell commands on this computer..
    /// </summary>
    internal static string CSShouldProcessTargetAdminEnable {
        get {
            return ResourceManager.GetString("CSShouldProcessTargetAdminEnable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No session configuration matches criteria &quot;{0}&quot;..
    /// </summary>
    internal static string CustomShellNotFound {
        get {
            return ResourceManager.GetString("CustomShellNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Running command &quot;{0}&quot; to disable the session configuration..
    /// </summary>
    internal static string DcsScriptMessageV {
        get {
            return ResourceManager.GetString("DcsScriptMessageV", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name: {0} SDDL: {1}. This denies access to this session configuration for everyone..
    /// </summary>
    internal static string DcsShouldProcessTarget {
        get {
            return ResourceManager.GetString("DcsShouldProcessTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Disabling the session configurations does not undo all the changes made by the Enable-PSRemoting or Enable-PSSessionConfiguration cmdlet. You might have to manually undo the changes by following these steps:
    ///    1. Stop and disable the WinRM service.
    ///    2. Delete the listener that accepts requests on any IP address.
    ///    3. Disable the firewall exceptions for WS-Management communications.
    ///    4. Restore the value of the LocalAccountTokenFilterPolicy to 0, which restricts remote access to members of the  [rest of string was truncated]&quot;;.
    /// </summary>
    internal static string DcsWarningMessage {
        get {
            return ResourceManager.GetString("DcsWarningMessage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error in decoding ErrorRecord..
    /// </summary>
    internal static string DecodingErrorForErrorRecord {
        get {
            return ResourceManager.GetString("DecodingErrorForErrorRecord", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error in decoding Maximum runspaces..
    /// </summary>
    internal static string DecodingErrorForMaxRunspaces {
        get {
            return ResourceManager.GetString("DecodingErrorForMaxRunspaces", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error in decoding Minimum runspaces..
    /// </summary>
    internal static string DecodingErrorForMinRunspaces {
        get {
            return ResourceManager.GetString("DecodingErrorForMinRunspaces", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error in decoding PipelineStateInfo..
    /// </summary>
    internal static string DecodingErrorForPipelineStateInfo {
        get {
            return ResourceManager.GetString("DecodingErrorForPipelineStateInfo", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error in decoding Windows PowerShellStateInfo..
    /// </summary>
    internal static string DecodingErrorForPowerShellStateInfo {
        get {
            return ResourceManager.GetString("DecodingErrorForPowerShellStateInfo", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error in decoding RunspacePoolStateInfo..
    /// </summary>
    internal static string DecodingErrorForRunspacePoolStateInfo {
        get {
            return ResourceManager.GetString("DecodingErrorForRunspacePoolStateInfo", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error in decoding RunspaceStateInfo..
    /// </summary>
    internal static string DecodingErrorForRunspaceStateInfo {
        get {
            return ResourceManager.GetString("DecodingErrorForRunspaceStateInfo", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An error of type &quot;{0}&quot; has occurred..
    /// </summary>
    internal static string DefaultRemotingExceptionMessage {
        get {
            return ResourceManager.GetString("DefaultRemotingExceptionMessage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Deserialized remoting data is null..
    /// </summary>
    internal static string DeserializedObjectIsNull {
        get {
            return ResourceManager.GetString("DeserializedObjectIsNull", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name: {0} SDDL: {1}. This denies remote access to this session configuration..
    /// </summary>
    internal static string DisableRemotingShouldProcessTarget {
        get {
            return ResourceManager.GetString("DisableRemotingShouldProcessTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Aliases to be defined when applied to a session.
    /// </summary>
    internal static string DISCAliasDefinitionsComment {
        get {
            return ResourceManager.GetString("DISCAliasDefinitionsComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Assemblies to load when applied to a session.
    /// </summary>
    internal static string DISCAssembliesToLoadComment {
        get {
            return ResourceManager.GetString("DISCAssembliesToLoadComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Author of this document.
    /// </summary>
    internal static string DISCAuthorComment {
        get {
            return ResourceManager.GetString("DISCAuthorComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Version of the CLR to use when applied to a session.
    /// </summary>
    internal static string DISCCLRVersionComment {
        get {
            return ResourceManager.GetString("DISCCLRVersionComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Could not parse visible command defintion for &apos;{0}&apos;. The visible command definition must be a hashtable with the keys of &apos;Name&apos; and &apos;Parameters&apos;. The value of the &apos;Parameters&apos; key must be a collection of hashtables with the keys &apos;Name&apos;, and optionally either &apos;ValidateSet&apos; or &apos;ValidatePattern&apos;..
    /// </summary>
    internal static string DISCCommandModificationSyntax {
        get {
            return ResourceManager.GetString("DISCCommandModificationSyntax", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Company associated with this document.
    /// </summary>
    internal static string DISCCompanyNameComment {
        get {
            return ResourceManager.GetString("DISCCompanyNameComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Copyright statement for this document.
    /// </summary>
    internal static string DISCCopyrightComment {
        get {
            return ResourceManager.GetString("DISCCopyrightComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Description of the functionality provided by these settings.
    /// </summary>
    internal static string DISCDescriptionComment {
        get {
            return ResourceManager.GetString("DISCDescriptionComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Environment variables to define when applied to a session.
    /// </summary>
    internal static string DISCEnvironmentVariablesComment {
        get {
            return ResourceManager.GetString("DISCEnvironmentVariablesComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error parsing configuration file {0} with the following message: {1}.
    /// </summary>
    internal static string DISCErrorParsingConfigFile {
        get {
            return ResourceManager.GetString("DISCErrorParsingConfigFile", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Execution policy to apply when applied to a session.
    /// </summary>
    internal static string DISCExecutionPolicyComment {
        get {
            return ResourceManager.GetString("DISCExecutionPolicyComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Format files (.ps1xml) to load when applied to a session.
    /// </summary>
    internal static string DISCFormatsToProcessComment {
        get {
            return ResourceManager.GetString("DISCFormatsToProcessComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Functions to define when applied to a session.
    /// </summary>
    internal static string DISCFunctionDefinitionsComment {
        get {
            return ResourceManager.GetString("DISCFunctionDefinitionsComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to ID used to uniquely identify this document.
    /// </summary>
    internal static string DISCGUIDComment {
        get {
            return ResourceManager.GetString("DISCGUIDComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Session type defaults to apply for this session configuration.
    /// </summary>
    internal static string DISCInitialSessionStateComment {
        get {
            return ResourceManager.GetString("DISCInitialSessionStateComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The key &apos;{0}&apos; contains an extension {1} that is not valid. Specify an extension from the following list: {{{2}}}..
    /// </summary>
    internal static string DISCInvalidExtension {
        get {
            return ResourceManager.GetString("DISCInvalidExtension", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; is not a valid key. Please change the member to a valid key in the file {1}..
    /// </summary>
    internal static string DISCInvalidKey {
        get {
            return ResourceManager.GetString("DISCInvalidKey", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The key &apos;{0}&apos; in the member &apos;{1}&apos; must be a script block. Change the key to the correct type in the file {2}..
    /// </summary>
    internal static string DISCKeyMustBeScriptBlock {
        get {
            return ResourceManager.GetString("DISCKeyMustBeScriptBlock", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Language mode to apply when applied to a session.
    /// </summary>
    internal static string DISCLanguageModeComment {
        get {
            return ResourceManager.GetString("DISCLanguageModeComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;SchemaVersion&apos; is not present in the configuration file. This member must exist and be assigned a version number of the form &apos;n.n.n.n&apos;. Please add the missing member to the file {0}..
    /// </summary>
    internal static string DISCMissingSchemaVersion {
        get {
            return ResourceManager.GetString("DISCMissingSchemaVersion", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Modules to import when applied to a session.
    /// </summary>
    internal static string DISCModulesToImportComment {
        get {
            return ResourceManager.GetString("DISCModulesToImportComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Disconnecting from the remote server failed with the following error message : {0}.
    /// </summary>
    internal static string DisconnectShellExCallBackErrr {
        get {
            return ResourceManager.GetString("DisconnectShellExCallBackErrr", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to disconnect from the remote server {0}..
    /// </summary>
    internal static string DisconnectShellExFailed {
        get {
            return ResourceManager.GetString("DisconnectShellExFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; is not an absolute path {1}. Change the member to an absolute path in the file {2}..
    /// </summary>
    internal static string DISCPathsMustBeAbsolute {
        get {
            return ResourceManager.GetString("DISCPathsMustBeAbsolute", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Version of the Windows PowerShell engine to use  when applied to a session.
    /// </summary>
    internal static string DISCPowerShellVersionComment {
        get {
            return ResourceManager.GetString("DISCPowerShellVersionComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Processor architecture to use when applied to a session.
    /// </summary>
    internal static string DISCProcessorArchitectureComment {
        get {
            return ResourceManager.GetString("DISCProcessorArchitectureComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to User roles (security groups), and the role capabilities that should be applied to them when applied to a session.
    /// </summary>
    internal static string DISCRoleDefinitionsComment {
        get {
            return ResourceManager.GetString("DISCRoleDefinitionsComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Whether to run this session configuration as the machine&apos;s (virtual) administrator account.
    /// </summary>
    internal static string DISCRunAsVirtualAccountComment {
        get {
            return ResourceManager.GetString("DISCRunAsVirtualAccountComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Groups associated with machine&apos;s (virtual) administrator account.
    /// </summary>
    internal static string DISCRunAsVirtualAccountGroupsComment {
        get {
            return ResourceManager.GetString("DISCRunAsVirtualAccountGroupsComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Version number of the schema used for this document.
    /// </summary>
    internal static string DISCSchemaVersionComment {
        get {
            return ResourceManager.GetString("DISCSchemaVersionComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Scripts to run when applied to a session.
    /// </summary>
    internal static string DISCScriptsToProcessComment {
        get {
            return ResourceManager.GetString("DISCScriptsToProcessComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Directory to place session transcripts for this session configuration.
    /// </summary>
    internal static string DISCTranscriptDirectoryComment {
        get {
            return ResourceManager.GetString("DISCTranscriptDirectoryComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The key &apos;{0}&apos; in the member &apos;{1}&apos; is not valid. Change the key in the file {2}..
    /// </summary>
    internal static string DISCTypeContainsInvalidKey {
        get {
            return ResourceManager.GetString("DISCTypeContainsInvalidKey", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; must be a hashtable. Change the member to the correct type in the file {1}..
    /// </summary>
    internal static string DISCTypeMustBeHashtable {
        get {
            return ResourceManager.GetString("DISCTypeMustBeHashtable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; must be a hashtable array. Change the member to the correct type in the file {1}..
    /// </summary>
    internal static string DISCTypeMustBeHashtableArray {
        get {
            return ResourceManager.GetString("DISCTypeMustBeHashtableArray", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; must be a string. Change the member to the correct type in the file {1}..
    /// </summary>
    internal static string DISCTypeMustBeString {
        get {
            return ResourceManager.GetString("DISCTypeMustBeString", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; must be a string array. Change the member to the correct type in the file {1}..
    /// </summary>
    internal static string DISCTypeMustBeStringArray {
        get {
            return ResourceManager.GetString("DISCTypeMustBeStringArray", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; must be an array consisting of either string or hashtable elements..
    /// </summary>
    internal static string DISCTypeMustBeStringOrHashtableArray {
        get {
            return ResourceManager.GetString("DISCTypeMustBeStringOrHashtableArray", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; must be an array consisting of either string or hashtable elements. Change the member to the correct type in the file {1}..
    /// </summary>
    internal static string DISCTypeMustBeStringOrHashtableArrayInFile {
        get {
            return ResourceManager.GetString("DISCTypeMustBeStringOrHashtableArrayInFile", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; must be a valid enumeration type &quot;{1}&quot;. Valid enumeration values are &quot;{2}&quot;. Change the member to the correct type in the file {3}..
    /// </summary>
    internal static string DISCTypeMustBeValidEnum {
        get {
            return ResourceManager.GetString("DISCTypeMustBeValidEnum", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The member &apos;{0}&apos; must contain the required key &apos;{1}&apos;. Add the require key to the file {2}..
    /// </summary>
    internal static string DISCTypeMustContainKey {
        get {
            return ResourceManager.GetString("DISCTypeMustContainKey", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Types to add when applied to a session.
    /// </summary>
    internal static string DISCTypesToAddComment {
        get {
            return ResourceManager.GetString("DISCTypesToAddComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Type files (.ps1xml) to load when applied to a session.
    /// </summary>
    internal static string DISCTypesToProcessComment {
        get {
            return ResourceManager.GetString("DISCTypesToProcessComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Variables to define when applied to a session.
    /// </summary>
    internal static string DISCVariableDefinitionsComment {
        get {
            return ResourceManager.GetString("DISCVariableDefinitionsComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The cmdlet &quot;{0}&quot; or the alias &quot;{1}&quot; cannot be present when &quot;{2}&quot;,&quot;{3}&quot;,&quot;{4}&quot; or &quot;{5}&quot; keys are specified in the session configuration file..
    /// </summary>
    internal static string DISCVisibilityAndAutoLoadingCannotBeBothSpecified {
        get {
            return ResourceManager.GetString("DISCVisibilityAndAutoLoadingCannotBeBothSpecified", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Aliases to make visible when applied to a session.
    /// </summary>
    internal static string DISCVisibleAliasesComment {
        get {
            return ResourceManager.GetString("DISCVisibleAliasesComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cmdlets to make visible when applied to a session.
    /// </summary>
    internal static string DISCVisibleCmdletsComment {
        get {
            return ResourceManager.GetString("DISCVisibleCmdletsComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to External commands (scripts and applications) to make visible when applied to a session.
    /// </summary>
    internal static string DISCVisibleExternalCommandsComment {
        get {
            return ResourceManager.GetString("DISCVisibleExternalCommandsComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Functions to make visible when applied to a session.
    /// </summary>
    internal static string DISCVisibleFunctionsComment {
        get {
            return ResourceManager.GetString("DISCVisibleFunctionsComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Providers to make visible when applied to a session.
    /// </summary>
    internal static string DISCVisibleProvidersComment {
        get {
            return ResourceManager.GetString("DISCVisibleProvidersComment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The {0} parameter is already specified in the {1} section. Contact your administrator to make sure that {0} is specified only once..
    /// </summary>
    internal static string DuplicateInitializationParameterFound {
        get {
            return ResourceManager.GetString("DuplicateInitializationParameterFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Running command &quot;{0}&quot; to enable the session configuration..
    /// </summary>
    internal static string EcsScriptMessageV {
        get {
            return ResourceManager.GetString("EcsScriptMessageV", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name: {0} SDDL: {1}. This lets selected users remotely run Windows PowerShell commands on this computer..
    /// </summary>
    internal static string EcsShouldProcessTarget {
        get {
            return ResourceManager.GetString("EcsShouldProcessTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to WinRM Quick Configuration.
    /// </summary>
    internal static string EcsWSManQCCaption {
        get {
            return ResourceManager.GetString("EcsWSManQCCaption", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Running command &quot;{0}&quot; to enable remote management of this computer by using the Windows Remote Management (WinRM) service.
    /// This includes:
    ///    1. Starting or restarting (if already started) the WinRM service
    ///    2. Setting the WinRM service startup type to Automatic
    ///    3. Creating a listener to accept requests on any IP address
    ///    4. Enabling Windows Firewall inbound rule exceptions for WS-Management traffic (for http only).
    ///
    ///Do you want to continue?.
    /// </summary>
    internal static string EcsWSManQCQuery {
        get {
            return ResourceManager.GetString("EcsWSManQCQuery", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Performing operation &quot;{0}&quot;..
    /// </summary>
    internal static string EcsWSManShouldProcessDesc {
        get {
            return ResourceManager.GetString("EcsWSManShouldProcessDesc", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Access is denied. To run this cmdlet, start Windows PowerShell with the &quot;Run as administrator&quot; option..
    /// </summary>
    internal static string EDcsRequiresElevation {
        get {
            return ResourceManager.GetString("EDcsRequiresElevation", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to PSSession {0} was created using the EnableNetworkAccess parameter and can only be reconnected from the local computer..
    /// </summary>
    internal static string EnableNetworkAccessWarning {
        get {
            return ResourceManager.GetString("EnableNetworkAccessWarning", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Disconnected sessions are supported only when the remote computer is running Windows PowerShell 3.0 or a later version of Windows PowerShell..
    /// </summary>
    internal static string EndpointDoesNotSupportDisconnect {
        get {
            return ResourceManager.GetString("EndpointDoesNotSupportDisconnect", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to connect to application domain name {0} of process {1}..
    /// </summary>
    internal static string EnterPSHostProcessCannotConnectToProcess {
        get {
            return ResourceManager.GetString("EnterPSHostProcessCannotConnectToProcess", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Enter-PSHostProcess does not support entering the same Windows PowerShell session it is running in..
    /// </summary>
    internal static string EnterPSHostProcessCantEnterSameProcess {
        get {
            return ResourceManager.GetString("EnterPSHostProcessCantEnterSameProcess", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Multiple processes were found with this name {0}. Use the process Id to specify a single process to enter..
    /// </summary>
    internal static string EnterPSHostProcessMultipleProcessesFoundWithName {
        get {
            return ResourceManager.GetString("EnterPSHostProcessMultipleProcessesFoundWithName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot enter process {0} because it has not loaded the Windows PowerShell engine..
    /// </summary>
    internal static string EnterPSHostProcessNoPowerShell {
        get {
            return ResourceManager.GetString("EnterPSHostProcessNoPowerShell", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No process was found with Id: {0}..
    /// </summary>
    internal static string EnterPSHostProcessNoProcessFoundWithId {
        get {
            return ResourceManager.GetString("EnterPSHostProcessNoProcessFoundWithId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No process was found with Name: {0}..
    /// </summary>
    internal static string EnterPSHostProcessNoProcessFoundWithName {
        get {
            return ResourceManager.GetString("EnterPSHostProcessNoProcessFoundWithName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0}[Process:{1}]: {2}.
    /// </summary>
    internal static string EnterPSHostProcessPrompt {
        get {
            return ResourceManager.GetString("EnterPSHostProcessPrompt", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot enter session {0} because it is not in the disconnected state or is not available for connection. Retrieve the remote session using Get-PSSession -ComputerName {1} -InstanceId {2}..
    /// </summary>
    internal static string EnterPSSessionBrokenSession {
        get {
            return ResourceManager.GetString("EnterPSSessionBrokenSession", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot enter session {0} because it is not in the disconnected state or is not available for connection. Reconnect using Connect-PSSession or Receive-PSSession..
    /// </summary>
    internal static string EnterPSSessionDisconnected {
        get {
            return ResourceManager.GetString("EnterPSSessionDisconnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0}[{1}]: {2}.
    /// </summary>
    internal static string EnterVMSessionPrompt {
        get {
            return ResourceManager.GetString("EnterVMSessionPrompt", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Registering session configuration.
    /// </summary>
    internal static string ERemotingCaption {
        get {
            return ResourceManager.GetString("ERemotingCaption", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The session configuration &quot;{0}&quot; was not found. Running command &quot;{1}&quot; to create the &quot;{0}&quot; session configuration. Running this command restarts the WinRM service..
    /// </summary>
    internal static string ERemotingQuery {
        get {
            return ResourceManager.GetString("ERemotingQuery", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Register-PSSessionConfiguration : The &apos;{0}&apos; key in the {1}. session configuration file contains a value that is not valid. Correct the file and try the command again. .
    /// </summary>
    internal static string ErrorParsingTheKeyInPSSessionConfigurationFile {
        get {
            return ResourceManager.GetString("ErrorParsingTheKeyInPSSessionConfigurationFile", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An error has occurred which Windows PowerShell cannot handle. A remote session might have ended..
    /// </summary>
    internal static string FatalErrorCausingClose {
        get {
            return ResourceManager.GetString("FatalErrorCausingClose", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The path specified as the value of the FilePath parameter is not from the FileSystem provider..
    /// </summary>
    internal static string FilePathNotFromFileSystemProvider {
        get {
            return ResourceManager.GetString("FilePathNotFromFileSystemProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The value of the FilePath parameter must be a Windows PowerShell script file. Enter the path to a file with a .ps1 file name extension and try the command again..
    /// </summary>
    internal static string FilePathShouldPS1Extension {
        get {
            return ResourceManager.GetString("FilePathShouldPS1Extension", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The -Force parameter cannot be used without the -Wait parameter..
    /// </summary>
    internal static string ForceCannotBeUsedWithoutWait {
        get {
            return ResourceManager.GetString("ForceCannotBeUsedWithoutWait", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Windows PowerShell cannot close the remote session properly. The session is in an undefined state because it was not opened or connected after being disconnected. Windows PowerShell will try to force the session to close on the local computer, but the session might not be closed on the remote computer. To close a remote session properly, first open it or connect it..
    /// </summary>
    internal static string ForceClosed {
        get {
            return ResourceManager.GetString("ForceClosed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The job was suspended successfully by adding the Force parameter..
    /// </summary>
    internal static string ForceSuspendJob {
        get {
            return ResourceManager.GetString("ForceSuspendJob", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Multiple jobs were found with Id {0}.  Debug-Job can debug only one job at a time..
    /// </summary>
    internal static string FoundMultipleJobsWithId {
        get {
            return ResourceManager.GetString("FoundMultipleJobsWithId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Multiple jobs were found with the name {0}.  Debug-Job can debug only one job at a time..
    /// </summary>
    internal static string FoundMultipleJobsWithName {
        get {
            return ResourceManager.GetString("FoundMultipleJobsWithName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The FragmentIDs of the same object must be in sequence, incrementally changing by 1. This can happen if the fragments are not properly constructed by the remote computer. The data might also have been corrupted or changed..
    /// </summary>
    internal static string FragmetIdsNotInSequence {
        get {
            return ResourceManager.GetString("FragmetIdsNotInSequence", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Running command &quot;{0}&quot; to get Windows PowerShell-based session configurations..
    /// </summary>
    internal static string GcsScriptMessageV {
        get {
            return ResourceManager.GetString("GcsScriptMessageV", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Error with error code {0} occurred while calling method {1}..
    /// </summary>
    internal static string GeneralError {
        get {
            return ResourceManager.GetString("GeneralError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The current host does not support the Enter-PSHostProcess cmdlet..
    /// </summary>
    internal static string HostDoesNotSupportIASession {
        get {
            return ResourceManager.GetString("HostDoesNotSupportIASession", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The host does not support Enter-PSSession and Exit-PSSession..
    /// </summary>
    internal static string HostDoesNotSupportPushRunspace {
        get {
            return ResourceManager.GetString("HostDoesNotSupportPushRunspace", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to You cannot run Enter-PSSession from a nested prompt..
    /// </summary>
    internal static string HostInNestedPrompt {
        get {
            return ResourceManager.GetString("HostInNestedPrompt", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Hyper-V Module for Windows PowerShell is not available on this machine..
    /// </summary>
    internal static string HyperVModuleNotAvailable {
        get {
            return ResourceManager.GetString("HyperVModuleNotAvailable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &quot;The Hyper-V socket target process has ended.&quot;.
    /// </summary>
    internal static string HyperVSocketTransportProcessEnded {
        get {
            return ResourceManager.GetString("HyperVSocketTransportProcessEnded", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The session {0}, {1}, {2} is not available to run commands.  The session availability is {3}..
    /// </summary>
    internal static string ICMInvalidSessionAvailability {
        get {
            return ResourceManager.GetString("ICMInvalidSessionAvailability", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Because the session state for session {0}, {1}, {2} is not equal to Open, you cannot run a command  in the session.  The session state is {3}..
    /// </summary>
    internal static string ICMInvalidSessionState {
        get {
            return ResourceManager.GetString("ICMInvalidSessionState", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No valid sessions were specified.  Ensure you provide valid sessions that are in the Opened state and are available to run commands..
    /// </summary>
    internal static string ICMNoValidRunspaces {
        get {
            return ResourceManager.GetString("ICMNoValidRunspaces", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The EndpointConfiguration with the {0} identifier is not in a valid initial session state on the remote computer. Contact your Windows PowerShell administrator, or the owner or creator of the endpoint configuration..
    /// </summary>
    internal static string InitialSessionStateNull {
        get {
            return ResourceManager.GetString("InitialSessionStateNull", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to One or more computer names are not valid. If you are trying to pass a URI, use the -ConnectionUri parameter, or pass URI objects instead of strings..
    /// </summary>
    internal static string InvalidComputerName {
        get {
            return ResourceManager.GetString("InvalidComputerName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The WS-Management service cannot process the request. Cannot find the {0} session configuration in the WSMan: drive on the {1} computer. For more information, see the about_Remote_Troubleshooting Help topic..
    /// </summary>
    internal static string InvalidConfigurationName {
        get {
            return ResourceManager.GetString("InvalidConfigurationName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &quot;The transport option is not valid. Parameter &quot;{0}&quot; can be non-zero only if parameter &quot;{1}&quot; is set to true.&quot;.
    /// </summary>
    internal static string InvalidConfigurationXMLAttribute {
        get {
            return ResourceManager.GetString("InvalidConfigurationXMLAttribute", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input ContainerId {0} does not exist..
    /// </summary>
    internal static string InvalidContainerId {
        get {
            return ResourceManager.GetString("InvalidContainerId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The credential is invalid..
    /// </summary>
    internal static string InvalidCredential {
        get {
            return ResourceManager.GetString("InvalidCredential", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified IdleTimeout session option {0} (seconds) is not a valid period.  Specify an IdleTimeout value that is greater than or equal to the minimum allowed {1} (seconds)..
    /// </summary>
    internal static string InvalidIdleTimeoutOption {
        get {
            return ResourceManager.GetString("InvalidIdleTimeoutOption", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The state of the current job instance is not valid for this operation..
    /// </summary>
    internal static string InvalidJobStateGeneral {
        get {
            return ResourceManager.GetString("InvalidJobStateGeneral", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The state of the current job instance is {0}. This state is not valid for the attempted operation. {1}.
    /// </summary>
    internal static string InvalidJobStateSpecific {
        get {
            return ResourceManager.GetString("InvalidJobStateSpecific", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The session configuration file {0} is not valid. Specify a valid session configuration file and try the command again..
    /// </summary>
    internal static string InvalidPSSessionConfigurationFile {
        get {
            return ResourceManager.GetString("InvalidPSSessionConfigurationFile", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The session configuration file {0} is not valid. Specify a valid session configuration file and try the command again. Error parsing configuration file: {1}..
    /// </summary>
    internal static string InvalidPSSessionConfigurationFileErrorProcessing {
        get {
            return ResourceManager.GetString("InvalidPSSessionConfigurationFileErrorProcessing", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to PSSession Configuration file path &apos;{0}&apos; is not valid. The path argument must resolve to a single file in the file system with a &apos;.pssc&apos; extension. Please fix the path specification and try again..
    /// </summary>
    internal static string InvalidPSSessionConfigurationFilePath {
        get {
            return ResourceManager.GetString("InvalidPSSessionConfigurationFilePath", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find module path to import. The value of the ModulesToImport parameter {0} does not exist or is not a module directory. Correct the value and try the command again..
    /// </summary>
    internal static string InvalidRegisterPSSessionConfigurationModulePath {
        get {
            return ResourceManager.GetString("InvalidRegisterPSSessionConfigurationModulePath", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Role Capability file path &apos;{0}&apos; is not valid. The path argument must resolve to a single file in the file system with a &apos;.psrc&apos; extension. Please fix the path specification and try again..
    /// </summary>
    internal static string InvalidRoleCapabilityFilePath {
        get {
            return ResourceManager.GetString("InvalidRoleCapabilityFilePath", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The key &apos;{0}&apos; is not valid in a role capability or role definition..
    /// </summary>
    internal static string InvalidRoleCapabilityKey {
        get {
            return ResourceManager.GetString("InvalidRoleCapabilityKey", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The &apos;Roles&apos; entry must be a hashtable, but was a {0}..
    /// </summary>
    internal static string InvalidRoleEntry {
        get {
            return ResourceManager.GetString("InvalidRoleEntry", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Could not convert the value of the &apos;{0}&apos; role entry to a hashtable. The &apos;Roles&apos; entry must be a hashtable with group names for keys, where the value associated with each key is another hashtable of session configuration properties for that role..
    /// </summary>
    internal static string InvalidRoleValue {
        get {
            return ResourceManager.GetString("InvalidRoleValue", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} is not a valid schema value. Valid values are &quot;http&quot; and &quot;https&quot;..
    /// </summary>
    internal static string InvalidSchemeValue {
        get {
            return ResourceManager.GetString("InvalidSchemeValue", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input username cannot be empty..
    /// </summary>
    internal static string InvalidUsername {
        get {
            return ResourceManager.GetString("InvalidUsername", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input VMGuid parameter does not resolve to a single virtual machine..
    /// </summary>
    internal static string InvalidVMGuid {
        get {
            return ResourceManager.GetString("InvalidVMGuid", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input VMGuid {0} does not resolve to a single virtual machine..
    /// </summary>
    internal static string InvalidVMGuidNotSingle {
        get {
            return ResourceManager.GetString("InvalidVMGuidNotSingle", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input VMName parameter resolves to multiple virtual machines..
    /// </summary>
    internal static string InvalidVMNameMultipleVM {
        get {
            return ResourceManager.GetString("InvalidVMNameMultipleVM", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input VMName {0} does not resolve to a single virtual machine..
    /// </summary>
    internal static string InvalidVMNameNotSingle {
        get {
            return ResourceManager.GetString("InvalidVMNameNotSingle", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input VMName parameter does not resolve to any virtual machine..
    /// </summary>
    internal static string InvalidVMNameNoVM {
        get {
            return ResourceManager.GetString("InvalidVMNameNoVM", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No computer names or connection Uris were specified.  You must provide a computer name or connection Uri when invoking a command with the -Disconnected switch..
    /// </summary>
    internal static string InvokeDisconnectedWithoutComputerName {
        get {
            return ResourceManager.GetString("InvokeDisconnectedWithoutComputerName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The client did not receive a response for a Close operation in the specified time interval. This can happen when a command is not responding to a Stop message in a timely manner..
    /// </summary>
    internal static string IPCCloseTimedOut {
        get {
            return ResourceManager.GetString("IPCCloseTimedOut", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to There is an error processing data from the background process. Error reported: {0}..
    /// </summary>
    internal static string IPCErrorProcessingServerData {
        get {
            return ResourceManager.GetString("IPCErrorProcessingServerData", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An error occurred while starting the background process. Error reported: {0}..
    /// </summary>
    internal static string IPCExceptionLaunchingProcess {
        get {
            return ResourceManager.GetString("IPCExceptionLaunchingProcess", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Not enough data is available to process the {0} element..
    /// </summary>
    internal static string IPCInsufficientDataforElement {
        get {
            return ResourceManager.GetString("IPCInsufficientDataforElement", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A {0} message to a session is not supported. A {0} message can be sent only to a command..
    /// </summary>
    internal static string IPCNoSignalForSession {
        get {
            return ResourceManager.GetString("IPCNoSignalForSession", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Node type &quot;{0}&quot; is unknown in the {1} element. Only the &quot;{2}&quot; node type is expected in the {1} element..
    /// </summary>
    internal static string IPCOnlyTextExpectedInDataElement {
        get {
            return ResourceManager.GetString("IPCOnlyTextExpectedInDataElement", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The background process closed or ended abnormally..
    /// </summary>
    internal static string IPCServerProcessExited {
        get {
            return ResourceManager.GetString("IPCServerProcessExited", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The background process reported an error with the following message: {0}..
    /// </summary>
    internal static string IPCServerProcessReportedError {
        get {
            return ResourceManager.GetString("IPCServerProcessReportedError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The client did not receive a response for a signal operation in the specified time interval. This can happen when a command is not responding to a Stop message in a timely manner..
    /// </summary>
    internal static string IPCSignalTimedOut {
        get {
            return ResourceManager.GetString("IPCSignalTimedOut", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified authentication mechanism &quot;{0}&quot; is not supported. Only &quot;{1}&quot; is supported for this operation..
    /// </summary>
    internal static string IPCSupportsOnlyDefaultAuth {
        get {
            return ResourceManager.GetString("IPCSupportsOnlyDefaultAuth", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Inter-process communication (IPC) transport does not support connect operations..
    /// </summary>
    internal static string IPCTransportConnectError {
        get {
            return ResourceManager.GetString("IPCTransportConnectError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Data for an inactive command with the identifier {0} was received. Received data: {1}..
    /// </summary>
    internal static string IPCUnknownCommandGuid {
        get {
            return ResourceManager.GetString("IPCUnknownCommandGuid", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An unknown element &quot;{0}&quot; was received. This can happen if the remote process closed or ended abnormally..
    /// </summary>
    internal static string IPCUnknownElementReceived {
        get {
            return ResourceManager.GetString("IPCUnknownElementReceived", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot process an element with node type &quot;{0}&quot;. Only {1} and {2} node types are supported..
    /// </summary>
    internal static string IPCUnknownNodeType {
        get {
            return ResourceManager.GetString("IPCUnknownNodeType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The &quot;{0}&quot; executable file was not found. Verify that the WOW64 feature is installed..
    /// </summary>
    internal static string IPCWowComponentNotPresent {
        get {
            return ResourceManager.GetString("IPCWowComponentNotPresent", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Expected only two attributes with the names &quot;{0}&quot; and &quot;{1}&quot; in the {2} element..
    /// </summary>
    internal static string IPCWrongAttributeCountForDataElement {
        get {
            return ResourceManager.GetString("IPCWrongAttributeCountForDataElement", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Expected only one attribute with the name &quot;{0}&quot; in the {1} element..
    /// </summary>
    internal static string IPCWrongAttributeCountForElement {
        get {
            return ResourceManager.GetString("IPCWrongAttributeCountForElement", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} does not contain an item with ID of {1}..
    /// </summary>
    internal static string ItemNotFoundInRepository {
        get {
            return ResourceManager.GetString("ItemNotFoundInRepository", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot run because the ChildJobs property is empty..
    /// </summary>
    internal static string JobActionInvalidWithNoChildJobs {
        get {
            return ResourceManager.GetString("JobActionInvalidWithNoChildJobs", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot finish because the ChildJobs property contains a value that is not valid..
    /// </summary>
    internal static string JobActionInvalidWithNullChild {
        get {
            return ResourceManager.GetString("JobActionInvalidWithNullChild", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Wait-Job cmdlet cannot finish working, because one or more jobs are blocked waiting for user interaction.  Process interactive job output by using the Receive-Job cmdlet, and then try again..
    /// </summary>
    internal static string JobBlockedSoWaitJobCannotContinue {
        get {
            return ResourceManager.GetString("JobBlockedSoWaitJobCannotContinue", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to connect job &quot;{0}&quot; to the remote server..
    /// </summary>
    internal static string JobConnectFailed {
        get {
            return ResourceManager.GetString("JobConnectFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The JobIdentifier provided must not be null. Please provide a valid JobIdentifier..
    /// </summary>
    internal static string JobIdentifierNull {
        get {
            return ResourceManager.GetString("JobIdentifierNull", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempted to create a job with ID {0}. A job with this ID cannot be created now. Verify that the ID has already been assigned once on this computer..
    /// </summary>
    internal static string JobIdNotYetAssigned {
        get {
            return ResourceManager.GetString("JobIdNotYetAssigned", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The following type cannot be instantiated because its constructor is not public: {0}..
    /// </summary>
    internal static string JobManagerRegistrationConstructorError {
        get {
            return ResourceManager.GetString("JobManagerRegistrationConstructorError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot resume the job that has an ID of {0}. Resuming jobs is not supported for some job types. For more information about support for resuming jobs, see the Help topic for the job type..
    /// </summary>
    internal static string JobResumeNotSupported {
        get {
            return ResourceManager.GetString("JobResumeNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot create a job with an ID of {0}; this is not a valid ID. Provide an integer for the job ID that is greater than 0..
    /// </summary>
    internal static string JobSessionIdLessThanOne {
        get {
            return ResourceManager.GetString("JobSessionIdLessThanOne", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The job was null when trying to save identifiers. Specify a job to save its identifiers..
    /// </summary>
    internal static string JobSourceAdapterCannotSaveNullJob {
        get {
            return ResourceManager.GetString("JobSourceAdapterCannotSaveNullJob", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A {1} job source adapter threw an exception with the following message: {0}.
    /// </summary>
    internal static string JobSourceAdapterError {
        get {
            return ResourceManager.GetString("JobSourceAdapterError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The job operation (Create, Get, or Remove) could not be performed because the JobSourceAdapter type specified in the JobDefinition is not registered. Register the JobSourceAdapter type either by using an explicit call, or by calling the Import-Module cmdlet, and then specifying an assembly..
    /// </summary>
    internal static string JobSourceAdapterNotFound {
        get {
            return ResourceManager.GetString("JobSourceAdapterNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to One or more jobs are in a suspended or disconnected state, and cannot continue without additional user input.  Specify the -Force parameter to continue to a completed, failed, or stopped state..
    /// </summary>
    internal static string JobSuspendedDisconnectedWaitWithForce {
        get {
            return ResourceManager.GetString("JobSuspendedDisconnectedWaitWithForce", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot suspend the job that has an ID of {0}. Suspending jobs is not supported for some job types. For more information about support for suspending jobs, see the Help topic for the job type..
    /// </summary>
    internal static string JobSuspendNotSupported {
        get {
            return ResourceManager.GetString("JobSuspendNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The workflow job &quot;{0}&quot; was stopped. Receive-Job is only displaying partial results..
    /// </summary>
    internal static string JobWasStopped {
        get {
            return ResourceManager.GetString("JobWasStopped", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot remove the job with the job ID {0} and the instance identifier {1} because the job is not finished. To remove the job, first stop the job or use the Force parameter..
    /// </summary>
    internal static string JobWithSpecifiedInstanceIdNotCompleted {
        get {
            return ResourceManager.GetString("JobWithSpecifiedInstanceIdNotCompleted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot find a job with the instance identifier {0}. Verify the value of the InstanceId parameter, and then try the command again..
    /// </summary>
    internal static string JobWithSpecifiedInstanceIdNotFound {
        get {
            return ResourceManager.GetString("JobWithSpecifiedInstanceIdNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot remove the job with the job ID {0} and the name {1} because the job is not finished. To remove the job, first stop the job, or use the Force parameter..
    /// </summary>
    internal static string JobWithSpecifiedNameNotCompleted {
        get {
            return ResourceManager.GetString("JobWithSpecifiedNameNotCompleted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot find the job because the job name {0} was not found. Verify the value of the Name parameter, and then try the command again..
    /// </summary>
    internal static string JobWithSpecifiedNameNotFound {
        get {
            return ResourceManager.GetString("JobWithSpecifiedNameNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot remove the job with the job ID {0} because the job is not finished. To remove the job, first stop the job, or use the Force parameter..
    /// </summary>
    internal static string JobWithSpecifiedSessionIdNotCompleted {
        get {
            return ResourceManager.GetString("JobWithSpecifiedSessionIdNotCompleted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot find a job with the job ID {0}. Verify the value of the Id parameter and then try the command again..
    /// </summary>
    internal static string JobWithSpecifiedSessionIdNotFound {
        get {
            return ResourceManager.GetString("JobWithSpecifiedSessionIdNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The mandatory value {0} is not in the correct format for registry key {1}. The expected format is &apos;string&apos;..
    /// </summary>
    internal static string MandatoryValueNotInCorrectFormat {
        get {
            return ResourceManager.GetString("MandatoryValueNotInCorrectFormat", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The mandatory value {0} is not specified for the {1} registry key..
    /// </summary>
    internal static string MandatoryValueNotPresent {
        get {
            return ResourceManager.GetString("MandatoryValueNotPresent", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remoting data is missing CallId property..
    /// </summary>
    internal static string MissingCallId {
        get {
            return ResourceManager.GetString("MissingCallId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remoting data is missing RemotingDataType property..
    /// </summary>
    internal static string MissingDataType {
        get {
            return ResourceManager.GetString("MissingDataType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remoting data is missing the destination property..
    /// </summary>
    internal static string MissingDestination {
        get {
            return ResourceManager.GetString("MissingDestination", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The IsEndFragment flag is not set for the last fragment. This can happen if the fragments are not properly constructed by the remote computer, or if the data was corrupted or changed..
    /// </summary>
    internal static string MissingIsEndFragment {
        get {
            return ResourceManager.GetString("MissingIsEndFragment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The IsStartFragment flag for the first fragment is not set..
    /// </summary>
    internal static string MissingIsStartFragment {
        get {
            return ResourceManager.GetString("MissingIsStartFragment", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remoting data is missing MethodName property..
    /// </summary>
    internal static string MissingMethodName {
        get {
            return ResourceManager.GetString("MissingMethodName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remoting data is missing {0} property..
    /// </summary>
    internal static string MissingProperty {
        get {
            return ResourceManager.GetString("MissingProperty", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remoting data is missing Session InstanceId property..
    /// </summary>
    internal static string MissingRunspaceId {
        get {
            return ResourceManager.GetString("MissingRunspaceId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remoting data is missing target interface property..
    /// </summary>
    internal static string MissingTarget {
        get {
            return ResourceManager.GetString("MissingTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote host method was invoked without specifying a target class..
    /// </summary>
    internal static string MissingTargetClass {
        get {
            return ResourceManager.GetString("MissingTargetClass", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Only administrators can override the Thread Options remotely..
    /// </summary>
    internal static string MustBeAdminToOverrideThreadOptions {
        get {
            return ResourceManager.GetString("MustBeAdminToOverrideThreadOptions", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Named Pipe server listener used for process attach is already running..
    /// </summary>
    internal static string NamedPipeAlreadyListening {
        get {
            return ResourceManager.GetString("NamedPipeAlreadyListening", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to start named pipe server while in server mode..
    /// </summary>
    internal static string NamedPipeServerCannotStart {
        get {
            return ResourceManager.GetString("NamedPipeServerCannotStart", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &quot;The named pipe target process has ended.&quot;.
    /// </summary>
    internal static string NamedPipeTransportProcessEnded {
        get {
            return ResourceManager.GetString("NamedPipeTransportProcessEnded", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Native API call to ReadFile failed. Error code is {0}..
    /// </summary>
    internal static string NativeReadFileFailed {
        get {
            return ResourceManager.GetString("NativeReadFileFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Native API call to WriteFile failed. Error code is {0}..
    /// </summary>
    internal static string NativeWriteFileFailed {
        get {
            return ResourceManager.GetString("NativeWriteFileFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot delete temporary file {0}. Reason for failure: {1}..
    /// </summary>
    internal static string NcsCannotDeleteFile {
        get {
            return ResourceManager.GetString("NcsCannotDeleteFile", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The new shell was successfully registered, but Windows PowerShell cannot delete the temporary file {0}. Reason for failure: {1}..
    /// </summary>
    internal static string NcsCannotDeleteFileAfterInstall {
        get {
            return ResourceManager.GetString("NcsCannotDeleteFileAfterInstall", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot write the shell configuration data into the temporary file {0}. Reason for failure: {1}..
    /// </summary>
    internal static string NcsCannotWritePluginContent {
        get {
            return ResourceManager.GetString("NcsCannotWritePluginContent", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Running command &quot;{0}&quot; to create a new session configuration..
    /// </summary>
    internal static string NcsScriptMessageV {
        get {
            return ResourceManager.GetString("NcsScriptMessageV", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name: {0} SDDL: {1}. This lets selected users remotely run Windows PowerShell commands on this computer..
    /// </summary>
    internal static string NcsShouldProcessTargetSDDL {
        get {
            return ResourceManager.GetString("NcsShouldProcessTargetSDDL", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Invoking a nested pipeline requires a valid runspace..
    /// </summary>
    internal static string NestedPipelineMissingRunspace {
        get {
            return ResourceManager.GetString("NestedPipelineMissingRunspace", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Creation of nested pipelines is not supported..
    /// </summary>
    internal static string NestedPipelineNotSupported {
        get {
            return ResourceManager.GetString("NestedPipelineNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Microsoft .NET Framework 2.0, which is required for Windows PowerShell 2.0, is not installed. Install the .NET Framework 2.0 and retry..
    /// </summary>
    internal static string NetFrameWorkV2NotInstalled {
        get {
            return ResourceManager.GetString("NetFrameWorkV2NotInstalled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The job could not be created because the JobInvocationInfo does not contain a JobDefinition. Start the JobInvocationInfo with a JobDefinition..
    /// </summary>
    internal static string NewJobSpecificationError {
        get {
            return ResourceManager.GetString("NewJobSpecificationError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A {0} cannot be specified when {1} is specified..
    /// </summary>
    internal static string NewRunspaceAmbiguosAuthentication {
        get {
            return ResourceManager.GetString("NewRunspaceAmbiguosAuthentication", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Expected &quot;{0}&quot; and &quot;{1}&quot; attributes in the &quot;{2}&quot; element..
    /// </summary>
    internal static string NoAttributesFoundForParamElement {
        get {
            return ResourceManager.GetString("NoAttributesFoundForParamElement", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An EndpointConfiguration with Id {0} does not exist on the remote server. Contact your Windows PowerShell administrator, or the owner or creator of the endpoint configuration..
    /// </summary>
    internal static string NonExistentInitialSessionStateProvider {
        get {
            return ResourceManager.GetString("NonExistentInitialSessionStateProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A running command could not be found for this PSSession..
    /// </summary>
    internal static string NoPowerShellForJob {
        get {
            return ResourceManager.GetString("NoPowerShellForJob", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An error occurred while decoding data received from the remote computer. At least {0} bytes of data are required to decode a deserialized object that is received from a remote computer. This can happen if the fragments are not properly constructed by the remote computer, or if the data was corrupted or changed..
    /// </summary>
    internal static string NotEnoughHeaderForRemoteDataObject {
        get {
            return ResourceManager.GetString("NotEnoughHeaderForRemoteDataObject", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to ObjectId cannot be less than or equal to 0. This can happen if the fragments are not properly constructed by the remote computer, or the data has been changed by unauthorized users..
    /// </summary>
    internal static string ObjectIdCannotBeLessThanZero {
        get {
            return ResourceManager.GetString("ObjectIdCannotBeLessThanZero", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unexpected ObjectId received. This can happen if the fragments are not properly constructed by the remote computer, or the data might have been corrupted or changed..
    /// </summary>
    internal static string ObjectIdsNotMatching {
        get {
            return ResourceManager.GetString("ObjectIdsNotMatching", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remoting data is too large to be reassembled from the fragments. This can happen if the length of the data in a fragment is greater than Int32.Max. It can also occur if the data was changed by unauthorized users..
    /// </summary>
    internal static string ObjectIsTooBig {
        get {
            return ResourceManager.GetString("ObjectIsTooBig", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Out of process memory..
    /// </summary>
    internal static string OutOfMemory {
        get {
            return ResourceManager.GetString("OutOfMemory", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote pipeline failed..
    /// </summary>
    internal static string PipelineFailedWithoutReason {
        get {
            return ResourceManager.GetString("PipelineFailedWithoutReason", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote pipeline failed for the following reason: {0}.
    /// </summary>
    internal static string PipelineFailedWithReason {
        get {
            return ResourceManager.GetString("PipelineFailedWithReason", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Pipeline ID &quot;{0}&quot; does not match the InstanceId of the pipeline that is currently running, &quot;{1}&quot;..
    /// </summary>
    internal static string PipelineIdsDoNotMatch {
        get {
            return ResourceManager.GetString("PipelineIdsDoNotMatch", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Pipeline Id &quot;{0}&quot; was not found on the server..
    /// </summary>
    internal static string PipelineNotFoundOnServer {
        get {
            return ResourceManager.GetString("PipelineNotFoundOnServer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote pipeline has been stopped..
    /// </summary>
    internal static string PipelineStopped {
        get {
            return ResourceManager.GetString("PipelineStopped", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The port number {0} is not within the range of valid values. The range of valid values is between 1 and 65535..
    /// </summary>
    internal static string PortIsOutOfRange {
        get {
            return ResourceManager.GetString("PortIsOutOfRange", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Windows PowerShell server session is not in a valid state for running nested commands.  No nested commands can be run in this session..
    /// </summary>
    internal static string PowerShellInvokerInvalidState {
        get {
            return ResourceManager.GetString("PowerShellInvokerInvalidState", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Windows PowerShell {0} is not installed. Install Windows PowerShell {0}, and then try again..
    /// </summary>
    internal static string PowerShellNotInstalled {
        get {
            return ResourceManager.GetString("PowerShellNotInstalled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} cannot be specified as a proxy authentication mechanism. Only {1},{2} or {3} are supported for proxy authentication..
    /// </summary>
    internal static string ProxyAmbiguosAuthentication {
        get {
            return ResourceManager.GetString("ProxyAmbiguosAuthentication", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Proxy credentials cannot be specified when using the following proxy access type: {0}. Either specify a different access type, or do not specify proxy credentials..
    /// </summary>
    internal static string ProxyCredentialWithoutAccess {
        get {
            return ResourceManager.GetString("ProxyCredentialWithoutAccess", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Default session options for new remote sessions.
    /// </summary>
    internal static string PSDefaultSessionOptionDescription {
        get {
            return ResourceManager.GetString("PSDefaultSessionOptionDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Reason in a deserialized Job object is not valid..
    /// </summary>
    internal static string PSJobProxyInvalidReasonException {
        get {
            return ResourceManager.GetString("PSJobProxyInvalidReasonException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Contains information about the remote user starting the remote session. This variable is available only from a remote session..
    /// </summary>
    internal static string PSSenderInfoDescription {
        get {
            return ResourceManager.GetString("PSSenderInfoDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to AppName where the remote connection will be established.
    /// </summary>
    internal static string PSSessionAppName {
        get {
            return ResourceManager.GetString("PSSessionAppName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified configuration file &apos;{0}&apos; was not loaded because no valid configuration file was found..
    /// </summary>
    internal static string PSSessionConfigurationFileNotFound {
        get {
            return ResourceManager.GetString("PSSessionConfigurationFileNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name of the session configuration which will be loaded on the remote computer.
    /// </summary>
    internal static string PSSessionConfigurationName {
        get {
            return ResourceManager.GetString("PSSessionConfigurationName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The value {0} is not valid for the {1} parameter. The available values are 2.0, 3.0, 4.0 and 5.0..
    /// </summary>
    internal static string PSVersionParameterOutOfRange {
        get {
            return ResourceManager.GetString("PSVersionParameterOutOfRange", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Session must be open..
    /// </summary>
    internal static string PushedRunspaceMustBeOpen {
        get {
            return ResourceManager.GetString("PushedRunspaceMustBeOpen", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote session query failed for {0} with the following error message: {1}.
    /// </summary>
    internal static string QueryForRunspacesFailed {
        get {
            return ResourceManager.GetString("QueryForRunspacesFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Computer {0} has been successfully disconnected..
    /// </summary>
    internal static string RCAutoDisconnected {
        get {
            return ResourceManager.GetString("RCAutoDisconnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Network connectivity to {0} has been lost and the reconnection attempt failed. Please repair the network connection and reconnect using Connect-PSSession or Receive-PSSession..
    /// </summary>
    internal static string RCAutoDisconnectingError {
        get {
            return ResourceManager.GetString("RCAutoDisconnectingError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The reconnection attempt to {0} failed. Attempting to disconnect the session....
    /// </summary>
    internal static string RCAutoDisconnectingWarning {
        get {
            return ResourceManager.GetString("RCAutoDisconnectingWarning", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to reconnect to {0} ....
    /// </summary>
    internal static string RCConnectionRetryAttempt {
        get {
            return ResourceManager.GetString("RCConnectionRetryAttempt", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Session {0} with instance ID {1} on computer {2} has been disconnected because the script running on the session has stopped at a breakpoint. Use the Enter-PSSession cmdlet on this session to connect back to the session and begin interactive debugging..
    /// </summary>
    internal static string RCDisconnectDebug {
        get {
            return ResourceManager.GetString("RCDisconnectDebug", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Job {0} has been created for reconnection..
    /// </summary>
    internal static string RCDisconnectedJob {
        get {
            return ResourceManager.GetString("RCDisconnectedJob", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Session {0} with instance ID {1} on computer {2} has been successfully disconnected..
    /// </summary>
    internal static string RCDisconnectSession {
        get {
            return ResourceManager.GetString("RCDisconnectSession", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Session {0} with instance ID {1} has been created for reconnection..
    /// </summary>
    internal static string RCDisconnectSessionCreated {
        get {
            return ResourceManager.GetString("RCDisconnectSessionCreated", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Network connectivity to {0} has been lost and the attempt to reconnect has failed. Please repair the network connection and reconnect using Connect-PSSession or Receive-PSSession..
    /// </summary>
    internal static string RCInternalError {
        get {
            return ResourceManager.GetString("RCInternalError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The network connection to {0} has been interrupted. Attempting to reconnect for up to {1} minutes....
    /// </summary>
    internal static string RCNetworkFailureDetected {
        get {
            return ResourceManager.GetString("RCNetworkFailureDetected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Network connection interrupted.
    /// </summary>
    internal static string RCProgressActivity {
        get {
            return ResourceManager.GetString("RCProgressActivity", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Attempting to reconnect to {0} ....
    /// </summary>
    internal static string RCProgressStatus {
        get {
            return ResourceManager.GetString("RCProgressStatus", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The network connection to {0} has been restored..
    /// </summary>
    internal static string RCReconnectSucceeded {
        get {
            return ResourceManager.GetString("RCReconnectSucceeded", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Running command &quot;{0}&quot; to remove a session configuration..
    /// </summary>
    internal static string RcsScriptMessageV {
        get {
            return ResourceManager.GetString("RcsScriptMessageV", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The total data received from the remote server exceeded the allowed maximum. The allowed maximum is {0}..
    /// </summary>
    internal static string ReceivedDataSizeExceededMaximumClient {
        get {
            return ResourceManager.GetString("ReceivedDataSizeExceededMaximumClient", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The total data received from the remote client exceeded the allowed maximum. The allowed maximum is {0}..
    /// </summary>
    internal static string ReceivedDataSizeExceededMaximumServer {
        get {
            return ResourceManager.GetString("ReceivedDataSizeExceededMaximumServer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Received data has a stream ID index of &quot;{0}&quot;. Only a Standard Output stream ID index of &quot;0&quot; is supported..
    /// </summary>
    internal static string ReceivedDataStreamIsNotStdout {
        get {
            return ResourceManager.GetString("ReceivedDataStreamIsNotStdout", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The current deserialized object size of the data received from the remote server exceeded the allowed maximum object size. The current deserialized object size is {0}. The allowed maximum object size is {1}..
    /// </summary>
    internal static string ReceivedObjectSizeExceededMaximumClient {
        get {
            return ResourceManager.GetString("ReceivedObjectSizeExceededMaximumClient", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The current deserialized object size of the data received from the remote client computer exceeded the allowed maximum object size. The current deserialized object size is {0}. The allowed maximum object size is {1}..
    /// </summary>
    internal static string ReceivedObjectSizeExceededMaximumServer {
        get {
            return ResourceManager.GetString("ReceivedObjectSizeExceededMaximumServer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Received remoting data with unsupported action: {0}..
    /// </summary>
    internal static string ReceivedUnsupportedAction {
        get {
            return ResourceManager.GetString("ReceivedUnsupportedAction", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Received remoting data with unsupported data type: {0}..
    /// </summary>
    internal static string ReceivedUnsupportedDataType {
        get {
            return ResourceManager.GetString("ReceivedUnsupportedDataType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Received unsupported remote host call: {0}..
    /// </summary>
    internal static string ReceivedUnsupportedRemoteHostCall {
        get {
            return ResourceManager.GetString("ReceivedUnsupportedRemoteHostCall", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Received unsupported RemotingTargetInterface type: {0}.
    /// </summary>
    internal static string ReceivedUnsupportedRemotingTargetInterfaceType {
        get {
            return ResourceManager.GetString("ReceivedUnsupportedRemotingTargetInterfaceType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Processing data from remote server {0} failed with the following error message: {1}.
    /// </summary>
    internal static string ReceiveExCallBackError {
        get {
            return ResourceManager.GetString("ReceiveExCallBackError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Receiving data from remote server {0} failed..
    /// </summary>
    internal static string ReceiveExFailed {
        get {
            return ResourceManager.GetString("ReceiveExFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote session command is currently stopped in the debugger.  Use the Enter-PSSession cmdlet to connect interactively to the remote session and automatically enter into the console debugger..
    /// </summary>
    internal static string ReceivePSSessionInDebugMode {
        get {
            return ResourceManager.GetString("ReceivePSSessionInDebugMode", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Reconnecting to a command on the remote server failed with the following error message : {0}.
    /// </summary>
    internal static string ReconnectShellCommandExCallBackError {
        get {
            return ResourceManager.GetString("ReconnectShellCommandExCallBackError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Reconnecting to the remote server {0} failed with the following error message : {1}.
    /// </summary>
    internal static string ReconnectShellExCallBackErrr {
        get {
            return ResourceManager.GetString("ReconnectShellExCallBackErrr", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Reconnecting to the remote server failed..
    /// </summary>
    internal static string ReconnectShellExFailed {
        get {
            return ResourceManager.GetString("ReconnectShellExFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The destination &quot;{0}&quot; requested the connection to be redirected to &quot;{1}&quot;. However &quot;{1}&quot; is not a well formatted URI..
    /// </summary>
    internal static string RedirectedURINotWellFormatted {
        get {
            return ResourceManager.GetString("RedirectedURINotWellFormatted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Relative URIs are not supported in the creation of remote sessions..
    /// </summary>
    internal static string RelativeUriForRunspacePathNotSupported {
        get {
            return ResourceManager.GetString("RelativeUriForRunspacePathNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote session to which you are connected does not support remote debugging. You must connect to a remote computer that is running Windows PowerShell {0} or greater..
    /// </summary>
    internal static string RemoteDebuggingEndpointVersionError {
        get {
            return ResourceManager.GetString("RemoteDebuggingEndpointVersionError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote host call to &quot;{0}&quot; failed..
    /// </summary>
    internal static string RemoteHostCallFailed {
        get {
            return ResourceManager.GetString("RemoteHostCallFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote host method data decoding is not supported for type {0}..
    /// </summary>
    internal static string RemoteHostDataDecodingNotSupported {
        get {
            return ResourceManager.GetString("RemoteHostDataDecodingNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote host method data encoding is not supported for type {0}..
    /// </summary>
    internal static string RemoteHostDataEncodingNotSupported {
        get {
            return ResourceManager.GetString("RemoteHostDataEncodingNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A failure occurred while decoding data from the remote host. There was an error in the network data..
    /// </summary>
    internal static string RemoteHostDecodingFailed {
        get {
            return ResourceManager.GetString("RemoteHostDecodingFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to You are currently in a Windows PowerShell PSSession and cannot use the Enter-PSSession cmdlet to enter another PSSession..
    /// </summary>
    internal static string RemoteHostDoesNotSupportPushRunspace {
        get {
            return ResourceManager.GetString("RemoteHostDoesNotSupportPushRunspace", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A script or application on the remote computer {0} is attempting to read the buffer contents on the Windows PowerShell host. For security reasons, this is not allowed; the call has been suppressed..
    /// </summary>
    internal static string RemoteHostGetBufferContents {
        get {
            return ResourceManager.GetString("RemoteHostGetBufferContents", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote host method {0} is not implemented..
    /// </summary>
    internal static string RemoteHostMethodNotImplemented {
        get {
            return ResourceManager.GetString("RemoteHostMethodNotImplemented", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to No client computer was specified for the remote runspace that is running a client-side method..
    /// </summary>
    internal static string RemoteHostNullClientHost {
        get {
            return ResourceManager.GetString("RemoteHostNullClientHost", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Windows PowerShell Credential Request: {0}.
    /// </summary>
    internal static string RemoteHostPromptForCredentialModifiedCaption {
        get {
            return ResourceManager.GetString("RemoteHostPromptForCredentialModifiedCaption", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Warning: A script or application on the remote computer {0} is requesting your credentials. Enter your credentials only if you trust the remote computer and the application or script that is requesting them.
    ///
    ///{1}.
    /// </summary>
    internal static string RemoteHostPromptForCredentialModifiedMessage {
        get {
            return ResourceManager.GetString("RemoteHostPromptForCredentialModifiedMessage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A script or application on the remote computer {0} is sending a prompt request. When you are prompted, enter sensitive information, such as credentials or passwords, only if you trust the remote computer and the application or script that is requesting the data..
    /// </summary>
    internal static string RemoteHostPromptSecureStringPrompt {
        get {
            return ResourceManager.GetString("RemoteHostPromptSecureStringPrompt", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A script or application on the remote computer {0} is asking to read a line securely. Enter sensitive information, such as your credentials, only if you trust the remote computer and the application or script that is requesting it..
    /// </summary>
    internal static string RemoteHostReadLineAsSecureStringPrompt {
        get {
            return ResourceManager.GetString("RemoteHostReadLineAsSecureStringPrompt", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote Session closed for Uri {0}..
    /// </summary>
    internal static string RemoteRunspaceClosed {
        get {
            return ResourceManager.GetString("RemoteRunspaceClosed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Enter-PSSession failed because the remote session does not provide required commands..
    /// </summary>
    internal static string RemoteRunspaceDoesNotSupportPushRunspace {
        get {
            return ResourceManager.GetString("RemoteRunspaceDoesNotSupportPushRunspace", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Multiple matches found for name {0}..
    /// </summary>
    internal static string RemoteRunspaceHasMultipleMatchesForSpecifiedName {
        get {
            return ResourceManager.GetString("RemoteRunspaceHasMultipleMatchesForSpecifiedName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Multiple matches found for session ID {0}..
    /// </summary>
    internal static string RemoteRunspaceHasMultipleMatchesForSpecifiedRunspaceId {
        get {
            return ResourceManager.GetString("RemoteRunspaceHasMultipleMatchesForSpecifiedRunspaceId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Multiple matches found for session ID {0}..
    /// </summary>
    internal static string RemoteRunspaceHasMultipleMatchesForSpecifiedSessionId {
        get {
            return ResourceManager.GetString("RemoteRunspaceHasMultipleMatchesForSpecifiedSessionId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Specified RemoteRunspaceInfo objects have duplicates..
    /// </summary>
    internal static string RemoteRunspaceInfoHasDuplicates {
        get {
            return ResourceManager.GetString("RemoteRunspaceInfoHasDuplicates", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Specified RemoteRunspaceInfo objects have exceeded the maximum allowable limit..
    /// </summary>
    internal static string RemoteRunspaceInfoLimitExceeded {
        get {
            return ResourceManager.GetString("RemoteRunspaceInfoLimitExceeded", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote session is not available for ComputerName {0}..
    /// </summary>
    internal static string RemoteRunspaceNotAvailableForSpecifiedComputer {
        get {
            return ResourceManager.GetString("RemoteRunspaceNotAvailableForSpecifiedComputer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote session with the name {0}  is not available..
    /// </summary>
    internal static string RemoteRunspaceNotAvailableForSpecifiedName {
        get {
            return ResourceManager.GetString("RemoteRunspaceNotAvailableForSpecifiedName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote session is not available for {0}..
    /// </summary>
    internal static string RemoteRunspaceNotAvailableForSpecifiedRunspaceId {
        get {
            return ResourceManager.GetString("RemoteRunspaceNotAvailableForSpecifiedRunspaceId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote session with the session ID {0} is not available..
    /// </summary>
    internal static string RemoteRunspaceNotAvailableForSpecifiedSessionId {
        get {
            return ResourceManager.GetString("RemoteRunspaceNotAvailableForSpecifiedSessionId", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Opening the remote session failed..
    /// </summary>
    internal static string RemoteRunspaceOpenFailed {
        get {
            return ResourceManager.GetString("RemoteRunspaceOpenFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Opening the remote session failed with an unexpected state. State {0}..
    /// </summary>
    internal static string RemoteRunspaceOpenUnknownState {
        get {
            return ResourceManager.GetString("RemoteRunspaceOpenUnknownState", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to create an instance of RemoteSessionHyperVSocketServer..
    /// </summary>
    internal static string RemoteSessionHyperVSocketServerConstructorFailure {
        get {
            return ResourceManager.GetString("RemoteSessionHyperVSocketServerConstructorFailure", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote transport error: {0}.
    /// </summary>
    internal static string RemoteTransportError {
        get {
            return ResourceManager.GetString("RemoteTransportError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Received packet not destined for logged-on user: user = {0}, packet destination = {1}..
    /// </summary>
    internal static string RemotingDestinationNotForMe {
        get {
            return ResourceManager.GetString("RemotingDestinationNotForMe", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote Command: {0}, associated with a job that has an ID of &quot;{1}&quot;..
    /// </summary>
    internal static string RemovePSJobWhatIfTarget {
        get {
            return ResourceManager.GetString("RemovePSJobWhatIfTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote session {0} could not be connected and could not be removed from the server. The client remote session object will be removed from the server, but the state of the remote session on the server is unknown..
    /// </summary>
    internal static string RemoveRunspaceNotConnected {
        get {
            return ResourceManager.GetString("RemoveRunspaceNotConnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Prompt response has a prompt id &quot;{0}&quot; that cannot be found..
    /// </summary>
    internal static string ResponsePromptIdCannotBeFound {
        get {
            return ResourceManager.GetString("ResponsePromptIdCannotBeFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This operation might restart the WinRM service. Do you want to continue?.
    /// </summary>
    internal static string RestartWinRMMessage {
        get {
            return ResourceManager.GetString("RestartWinRMMessage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The WinRM service must be restarted before a UI can be displayed for the SecurityDescriptor selection. Restart the WinRM service, and then run the following command: &quot;{0}&quot;.
    /// </summary>
    internal static string RestartWSManRequiredShowUI {
        get {
            return ResourceManager.GetString("RestartWSManRequiredShowUI", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &quot;Restart-Service&quot;.
    /// </summary>
    internal static string RestartWSManServiceAction {
        get {
            return ResourceManager.GetString("RestartWSManServiceAction", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Restarting WinRM service.
    /// </summary>
    internal static string RestartWSManServiceMessageV {
        get {
            return ResourceManager.GetString("RestartWSManServiceMessageV", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name: {0}.
    /// </summary>
    internal static string RestartWSManServiceTarget {
        get {
            return ResourceManager.GetString("RestartWSManServiceTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to One or more jobs could not be resumed because the state was not valid for the operation..
    /// </summary>
    internal static string ResumeJobInvalidJobState {
        get {
            return ResourceManager.GetString("ResumeJobInvalidJobState", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to When RunAs is enabled in a Windows PowerShell session configuration, the Windows security model cannot enforce a security boundary between different user sessions that are created by using this endpoint. Verify that the Windows PowerShell runspace configuration is restricted to only the necessary set of cmdlets and capabilities..
    /// </summary>
    internal static string RunAsSessionConfigurationSecurityWarning {
        get {
            return ResourceManager.GetString("RunAsSessionConfigurationSecurityWarning", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Starting a command on the remote server failed with the following error message : {0}.
    /// </summary>
    internal static string RunShellCommandExCallBackError {
        get {
            return ResourceManager.GetString("RunShellCommandExCallBackError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Starting a command on the remote server failed..
    /// </summary>
    internal static string RunShellCommandExFailed {
        get {
            return ResourceManager.GetString("RunShellCommandExFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The session already exists. Trying to create the session again with the same InstanceId {0} is not allowed..
    /// </summary>
    internal static string RunspaceAlreadyExists {
        get {
            return ResourceManager.GetString("RunspaceAlreadyExists", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot connect PSSession &quot;{0}&quot;, either because it is not in the Disconnected state, or it is not available for connection..
    /// </summary>
    internal static string RunspaceCannotBeConnected {
        get {
            return ResourceManager.GetString("RunspaceCannotBeConnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot disconnect PSSession &quot;{0}&quot; because it is not in the Opened state..
    /// </summary>
    internal static string RunspaceCannotBeDisconnected {
        get {
            return ResourceManager.GetString("RunspaceCannotBeDisconnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified remote session with a client InstanceId of &quot;{0}&quot; cannot be found..
    /// </summary>
    internal static string RunspaceCannotBeFound {
        get {
            return ResourceManager.GetString("RunspaceCannotBeFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The connect operation failed for session {0}. The Runspace state is {1} instead of Opened..
    /// </summary>
    internal static string RunspaceConnectFailed {
        get {
            return ResourceManager.GetString("RunspaceConnectFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The connect operation failed for session {0} with the following error message: {1}.
    /// </summary>
    internal static string RunspaceConnectFailedWithMessage {
        get {
            return ResourceManager.GetString("RunspaceConnectFailedWithMessage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Disconnect-PSSession operation failed for runspace Id = {0}..
    /// </summary>
    internal static string RunspaceDisconnectFailed {
        get {
            return ResourceManager.GetString("RunspaceDisconnectFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Disconnect-PSSession operation failed for runspace Id = {0} for the following reason: {1}.
    /// </summary>
    internal static string RunspaceDisconnectFailedWithReason {
        get {
            return ResourceManager.GetString("RunspaceDisconnectFailedWithReason", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified client session InstanceId &quot;{0}&quot; does not match the existing session&apos;s InstanceId &quot;{1}&quot;..
    /// </summary>
    internal static string RunspaceIdsDoNotMatch {
        get {
            return ResourceManager.GetString("RunspaceIdsDoNotMatch", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Session parameter can be used only with PSRemotingJob objects..
    /// </summary>
    internal static string RunspaceParamNotSupported {
        get {
            return ResourceManager.GetString("RunspaceParamNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Disconnected PSSession query failed for computer &quot;{0}&quot;..
    /// </summary>
    internal static string RunspaceQueryFailed {
        get {
            return ResourceManager.GetString("RunspaceQueryFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Running command &quot;{0}&quot; to update the session configuration properties..
    /// </summary>
    internal static string ScsScriptMessageV {
        get {
            return ResourceManager.GetString("ScsScriptMessageV", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Name: {0} SDDL: {1}.
    /// </summary>
    internal static string ScsShouldProcessTargetSDDL {
        get {
            return ResourceManager.GetString("ScsShouldProcessTargetSDDL", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Sending data to remote server {0} failed with the following error message : {1}.
    /// </summary>
    internal static string SendExCallBackError {
        get {
            return ResourceManager.GetString("SendExCallBackError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Sending data to remote server {0} failed..
    /// </summary>
    internal static string SendExFailed {
        get {
            return ResourceManager.GetString("SendExFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The server that is running Windows PowerShell cannot process the connect operation because the following information is not found or not valid: Client Capability information and Connect RunspacePool information..
    /// </summary>
    internal static string ServerConnectFailedOnInputValidation {
        get {
            return ResourceManager.GetString("ServerConnectFailedOnInputValidation", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The server that is running Windows PowerShell cannot process the connect operation because the server runspace pool properties did not match the client computer specified properties..
    /// </summary>
    internal static string ServerConnectFailedOnMismatchedRunspacePoolProperties {
        get {
            return ResourceManager.GetString("ServerConnectFailedOnMismatchedRunspacePoolProperties", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The server that is running Windows PowerShell does not support connect operations on the {0} {1}  that is negotiated by the client computer. Make sure the client computer is compatible with the build {2} and the protocol version {3} of Windows PowerShell..
    /// </summary>
    internal static string ServerConnectFailedOnNegotiation {
        get {
            return ResourceManager.GetString("ServerConnectFailedOnNegotiation", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The server that is running Windows PowerShell cannot process the connect operation because the server has either not been started, or it is shutting down..
    /// </summary>
    internal static string ServerConnectFailedOnServerStateValidation {
        get {
            return ResourceManager.GetString("ServerConnectFailedOnServerStateValidation", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot enter Runspace because a Runspace is already pushed in this session..
    /// </summary>
    internal static string ServerDriverRemoteHostAlreadyPushed {
        get {
            return ResourceManager.GetString("ServerDriverRemoteHostAlreadyPushed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot enter Runspace because there is no server remote debugger available..
    /// </summary>
    internal static string ServerDriverRemoteHostNoDebuggerToPush {
        get {
            return ResourceManager.GetString("ServerDriverRemoteHostNoDebuggerToPush", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot enter Runspace because it is not a remote Runspace..
    /// </summary>
    internal static string ServerDriverRemoteHostNotRemoteRunspace {
        get {
            return ResourceManager.GetString("ServerDriverRemoteHostNotRemoteRunspace", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The client did not respond with a public key within the specified time-out period..
    /// </summary>
    internal static string ServerKeyExchangeFailed {
        get {
            return ResourceManager.GetString("ServerKeyExchangeFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The server that is running Windows PowerShell does not support the {0} {1} negotiated by the client computer. Verify that the client computer is compatible with the build {2} and the protocol version {3} of Windows PowerShell..
    /// </summary>
    internal static string ServerNegotiationFailed {
        get {
            return ResourceManager.GetString("ServerNegotiationFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The server negotiation timer has expired. The negotiation time-out interval is {0} milliseconds..
    /// </summary>
    internal static string ServerNegotiationTimeout {
        get {
            return ResourceManager.GetString("ServerNegotiationTimeout", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0}. Negotiation with the client failed. Make sure the client is compatible with the build {1} and the protocol version {2} of Windows PowerShell..
    /// </summary>
    internal static string ServerNotFoundCapabilityProperties {
        get {
            return ResourceManager.GetString("ServerNotFoundCapabilityProperties", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The server process has exited..
    /// </summary>
    internal static string ServerProcessExited {
        get {
            return ResourceManager.GetString("ServerProcessExited", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The destination server has sent a request to close the session..
    /// </summary>
    internal static string ServerRequestedToCloseSession {
        get {
            return ResourceManager.GetString("ServerRequestedToCloseSession", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The remote session was unable to invoke command {0} with error: {1}..
    /// </summary>
    internal static string ServerSideNestedCommandInvokeFailed {
        get {
            return ResourceManager.GetString("ServerSideNestedCommandInvokeFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Could not get the session capabilities for the session configuration &apos;{0}&apos;: this configuration was not registered with a session configuration file (.pssc), such as one created by the New-PSSessionConfigurationFile cmdlet..
    /// </summary>
    internal static string SessionConfigurationMustBeFileBased {
        get {
            return ResourceManager.GetString("SessionConfigurationMustBeFileBased", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A failure occurred while attempting to connect the PSSession..
    /// </summary>
    internal static string SessionConnectFailed {
        get {
            return ResourceManager.GetString("SessionConnectFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot find a PSSession with an InstanceId value of &quot;{0}&quot;..
    /// </summary>
    internal static string SessionIdMatchFailed {
        get {
            return ResourceManager.GetString("SessionIdMatchFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot find a PSSession that has the name &quot;{0}&quot;..
    /// </summary>
    internal static string SessionNameMatchFailed {
        get {
            return ResourceManager.GetString("SessionNameMatchFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The SessionName parameter can only be used with the Disconnected switch parameter..
    /// </summary>
    internal static string SessionNameWithoutInvokeDisconnected {
        get {
            return ResourceManager.GetString("SessionNameWithoutInvokeDisconnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The PSSession is in a disconnected state and is not available for connection..
    /// </summary>
    internal static string SessionNotAvailableForConnection {
        get {
            return ResourceManager.GetString("SessionNotAvailableForConnection", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Enabled: False. This configures the WS-Management service to deny the connection request..
    /// </summary>
    internal static string SetEnabledFalseTarget {
        get {
            return ResourceManager.GetString("SetEnabledFalseTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Enabled: True. This configures the WS-Management service to accept the connection request..
    /// </summary>
    internal static string SetEnabledTrueTarget {
        get {
            return ResourceManager.GetString("SetEnabledTrueTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &quot;{0}&quot; and &quot;{1}&quot; parameters cannot be specified together. Specify either &quot;{0}&quot; or  &quot;{1}&quot; parameter..
    /// </summary>
    internal static string ShowUIAndSDDLCannotExist {
        get {
            return ResourceManager.GetString("ShowUIAndSDDLCannotExist", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find a scheduled job with name {0}..
    /// </summary>
    internal static string StartJobDefinitionNotFound1 {
        get {
            return ResourceManager.GetString("StartJobDefinitionNotFound1", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find a scheduled job with type {0} and name {1}..
    /// </summary>
    internal static string StartJobDefinitionNotFound2 {
        get {
            return ResourceManager.GetString("StartJobDefinitionNotFound2", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot retrieve the job definition &apos;{0}&apos; because path &apos;{1}&apos; refers to a &apos;{2}&apos; provider path.  Change the path parameter to a file system path..
    /// </summary>
    internal static string StartJobDefinitionPathInvalidNotFSProvider {
        get {
            return ResourceManager.GetString("StartJobDefinitionPathInvalidNotFSProvider", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot retrieve the job definition &apos;{0}&apos; because path &apos;{1}&apos; resolves to multiple file paths.  Change the path parameter so that it is a single path..
    /// </summary>
    internal static string StartJobDefinitionPathInvalidNotSingle {
        get {
            return ResourceManager.GetString("StartJobDefinitionPathInvalidNotSingle", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to More than one job definition was found with name {0}. Try including the -DefinitionType parameter to Start-Job in order to narrow the search for the job definition to a single job source adapter..
    /// </summary>
    internal static string StartJobManyDefNameMatches {
        get {
            return ResourceManager.GetString("StartJobManyDefNameMatches", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &quot;{0}&quot; must specify a Windows PowerShell script file that ends with extension &quot;.ps1&quot;..
    /// </summary>
    internal static string StartupScriptNotCorrect {
        get {
            return ResourceManager.GetString("StartupScriptNotCorrect", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Running startup script threw an error: {0}..
    /// </summary>
    internal static string StartupScriptThrewTerminatingError {
        get {
            return ResourceManager.GetString("StartupScriptThrewTerminatingError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Standard Input handle cannot be set to the &apos;no wait&apos; state. The system error code is {0}..
    /// </summary>
    internal static string StdInCannotBeSetToNoWait {
        get {
            return ResourceManager.GetString("StdInCannotBeSetToNoWait", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Standard Input handle is not open..
    /// </summary>
    internal static string StdInIsNotOpen {
        get {
            return ResourceManager.GetString("StdInIsNotOpen", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Reconnection attempt canceled. Please repair the network connection and reconnect using Connect-PSSession or Receive-PSSession..
    /// </summary>
    internal static string StopCommandOnRetry {
        get {
            return ResourceManager.GetString("StopCommandOnRetry", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Job &quot;{0}&quot; could not be connected to the server and so could not be stopped..
    /// </summary>
    internal static string StopJobNotConnected {
        get {
            return ResourceManager.GetString("StopJobNotConnected", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote Command: {0}, associated with the job that has an ID of &quot;{1}&quot;..
    /// </summary>
    internal static string StopPSJobWhatIfTarget {
        get {
            return ResourceManager.GetString("StopPSJobWhatIfTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to One or more jobs could not be suspended because the state was not valid for the operation..
    /// </summary>
    internal static string SuspendJobInvalidJobState {
        get {
            return ResourceManager.GetString("SuspendJobInvalidJobState", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The ThrottlingJob.AddChildJob method cannot be called after a call to the ThrottlingJob.EndOfChildJobs method..
    /// </summary>
    internal static string ThrottlingJobChildAddedAfterEndOfChildJobs {
        get {
            return ResourceManager.GetString("ThrottlingJobChildAddedAfterEndOfChildJobs", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The ThrottlingJob.AddChildJob method accepts only child jobs in the NotStarted state..
    /// </summary>
    internal static string ThrottlingJobChildAlreadyRunning {
        get {
            return ResourceManager.GetString("ThrottlingJobChildAlreadyRunning", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Memory usage of a cmdlet has exceeded a warning level. To avoid this situation, try one of the following: 1) Lower the rate at which CIM operations produce data (for example, by passing a low value to the ThrottleLimit parameter), 2) Increase the rate at which data is consumed by downstream cmdlets, or 3) Use the Invoke-Command cmdlet to run the whole pipeline on the server. The cmdlet that exceeded a warning level of memory usage was started by the following command line: {0}.
    /// </summary>
    internal static string ThrottlingJobFlowControlMemoryWarning {
        get {
            return ResourceManager.GetString("ThrottlingJobFlowControlMemoryWarning", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0}/{1} completed.
    /// </summary>
    internal static string ThrottlingJobStatusMessage {
        get {
            return ResourceManager.GetString("ThrottlingJobStatusMessage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} For more information, see the about_Remote_Troubleshooting Help topic..
    /// </summary>
    internal static string TroubleShootingHelpTopic {
        get {
            return ResourceManager.GetString("TroubleShootingHelpTopic", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Both &quot;{0}&quot; and &quot;{1}&quot; must be specified in the &quot;{2}&quot; section..
    /// </summary>
    internal static string TypeNeedsAssembly {
        get {
            return ResourceManager.GetString("TypeNeedsAssembly", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to load the assembly &quot;{0}&quot; specified in the &quot;{1}&quot; section..
    /// </summary>
    internal static string UnableToLoadAssembly {
        get {
            return ResourceManager.GetString("UnableToLoadAssembly", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to load the type &quot;{0}&quot; specified in the &quot;{1}&quot; section..
    /// </summary>
    internal static string UnableToLoadType {
        get {
            return ResourceManager.GetString("UnableToLoadType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote host method was invoked on an unknown target class: {0}.
    /// </summary>
    internal static string UnknownTargetClass {
        get {
            return ResourceManager.GetString("UnknownTargetClass", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Wait handle type &quot;{0}&quot; is not supported..
    /// </summary>
    internal static string UnsupportedWaitHandleType {
        get {
            return ResourceManager.GetString("UnsupportedWaitHandleType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0}Redirect location reported: {1}..
    /// </summary>
    internal static string URIEndPointNotResolved {
        get {
            return ResourceManager.GetString("URIEndPointNotResolved", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} To automatically connect to the redirected URI, verify the &quot;{1}&quot; property of the session preference variable &quot;{2}&quot;, and use the &quot;{3}&quot; parameter on the cmdlet..
    /// </summary>
    internal static string URIRedirectionReported {
        get {
            return ResourceManager.GetString("URIRedirectionReported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Your connection has been redirected to the following URI: &quot;{0}&quot;.
    /// </summary>
    internal static string URIRedirectWarningToHost {
        get {
            return ResourceManager.GetString("URIRedirectWarningToHost", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Specified Uri {0} is not valid..
    /// </summary>
    internal static string UriSpecifiedNotValid {
        get {
            return ResourceManager.GetString("UriSpecifiedNotValid", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The SharedHost attribute cannot be set to false on a workflow session type configuration..
    /// </summary>
    internal static string UseSharedProcessCannotBeFalseForWorkflowSessionType {
        get {
            return ResourceManager.GetString("UseSharedProcessCannotBeFalseForWorkflowSessionType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A failure occurred while attempting to connect the VMSession..
    /// </summary>
    internal static string VMSessionConnectFailed {
        get {
            return ResourceManager.GetString("VMSessionConnectFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Wildcard characters are not supported for the FilePath parameter. Specify a path without wildcard characters..
    /// </summary>
    internal static string WildCardErrorFilePathParameter {
        get {
            return ResourceManager.GetString("WildCardErrorFilePathParameter", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Windows PowerShell remoting is not supported in the Windows Preinstallation Environment (WinPE)..
    /// </summary>
    internal static string WinPERemotingNotSupported {
        get {
            return ResourceManager.GetString("WinPERemotingNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Changes made by {0} cannot take effect until the WinRM service is restarted..
    /// </summary>
    internal static string WinRMRequiresRestart {
        get {
            return ResourceManager.GetString("WinRMRequiresRestart", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} may need to restart the WinRM service if a configuration using this name has recently been unregistered, certain system data structures may still be cached. In that case, a restart of WinRM may be required.
    ///All WinRM sessions connected to Windows PowerShell session configurations, such as Microsoft.PowerShell and session configurations that are created with the Register-PSSessionConfiguration cmdlet, are disconnected..
    /// </summary>
    internal static string WinRMRestartWarning {
        get {
            return ResourceManager.GetString("WinRMRestartWarning", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The WriteEvents parameter cannot be used without the Wait parameter..
    /// </summary>
    internal static string WriteEventsCannotBeUsedWithoutWait {
        get {
            return ResourceManager.GetString("WriteEventsCannotBeUsedWithoutWait", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The -WriteJobInResults parameter cannot be used without the -Wait parameter.
    /// </summary>
    internal static string WriteJobInResultsCannotBeUsedWithoutWait {
        get {
            return ResourceManager.GetString("WriteJobInResultsCannotBeUsedWithoutWait", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A {0} value must be specified for session option {1}..
    /// </summary>
    internal static string WrongSessionOptionValue {
        get {
            return ResourceManager.GetString("WrongSessionOptionValue", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to WSMan Initialization failed with error code: {0}..
    /// </summary>
    internal static string WSManInitFailed {
        get {
            return ResourceManager.GetString("WSManInitFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The maximum number of WS-Man URI redirections to allow while connecting to a remote computer.
    /// </summary>
    internal static string WsmanMaxRedirectionCountVariableDescription {
        get {
            return ResourceManager.GetString("WsmanMaxRedirectionCountVariableDescription", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to PowerShell plugin cannot process the Connect operation as required negotiation information is either missing or not complete..
    /// </summary>
    internal static string WSManPluginConnectNoNegotiationData {
        get {
            return ResourceManager.GetString("WSManPluginConnectNoNegotiationData", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to PowerShell plugin failed to process to connect operation..
    /// </summary>
    internal static string WSManPluginConnectOperationFailed {
        get {
            return ResourceManager.GetString("WSManPluginConnectOperationFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The supplied plugin context is not valid..
    /// </summary>
    internal static string WSManPluginContextNotFound {
        get {
            return ResourceManager.GetString("WSManPluginContextNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Powershell plugin encounterd a fatal error while processing {0} arguments..
    /// </summary>
    internal static string WSManPluginInvalidArgSet {
        get {
            return ResourceManager.GetString("WSManPluginInvalidArgSet", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The supplied command context is not valid..
    /// </summary>
    internal static string WSManPluginInvalidCommandContext {
        get {
            return ResourceManager.GetString("WSManPluginInvalidCommandContext", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The supplied input data is not valid. Only input data of type {0} is supported..
    /// </summary>
    internal static string WSManPluginInvalidInputDataType {
        get {
            return ResourceManager.GetString("WSManPluginInvalidInputDataType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The supplied input stream is not valid. Only {0} is supported as input stream..
    /// </summary>
    internal static string WSManPluginInvalidInputStream {
        get {
            return ResourceManager.GetString("WSManPluginInvalidInputStream", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The supplied output stream set is not valid. Only {0} is supported as output stream..
    /// </summary>
    internal static string WSManPluginInvalidOutputStream {
        get {
            return ResourceManager.GetString("WSManPluginInvalidOutputStream", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The supplied WSMAN_SENDER_DETAILS is not valid. Cannot process null WSMAN_SENDER_DETAILS..
    /// </summary>
    internal static string WSManPluginInvalidSenderDetails {
        get {
            return ResourceManager.GetString("WSManPluginInvalidSenderDetails", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The supplied shell context is not valid..
    /// </summary>
    internal static string WSManPluginInvalidShellContext {
        get {
            return ResourceManager.GetString("WSManPluginInvalidShellContext", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0}.
    /// </summary>
    internal static string WSManPluginManagedException {
        get {
            return ResourceManager.GetString("WSManPluginManagedException", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to NULL value is not allowed for {0} with the plugin method {1}..
    /// </summary>
    internal static string WSManPluginNullInvalidInput {
        get {
            return ResourceManager.GetString("WSManPluginNullInvalidInput", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to NULL value is not allowed for input stream and output stream sets. {0} and {1} are the supported input and output streams..
    /// </summary>
    internal static string WSManPluginNullInvalidStreamSet {
        get {
            return ResourceManager.GetString("WSManPluginNullInvalidStreamSet", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to NULL value is not allowed for {0} with the plugin method {1}..
    /// </summary>
    internal static string WSManPluginNullPluginContext {
        get {
            return ResourceManager.GetString("WSManPluginNullPluginContext", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to NULL value is not allowed for {0} with the plugin method {1}..
    /// </summary>
    internal static string WSManPluginNullShellContext {
        get {
            return ResourceManager.GetString("WSManPluginNullShellContext", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to PowerShell plugin operation is shutting down. This may happen if the hosting service or application is shutting down..
    /// </summary>
    internal static string WSManPluginOperationClose {
        get {
            return ResourceManager.GetString("WSManPluginOperationClose", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to PowerShell plugin does not understand the option {0}. Make sure the client is compatible with the build {1} and the protocol version {2} of PowerShell..
    /// </summary>
    internal static string WSManPluginOptionNotUnderstood {
        get {
            return ResourceManager.GetString("WSManPluginOptionNotUnderstood", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An option with name {0} is expected from the client. Make sure the client is compatible with the build {1} and the protocl version {2} of PowerShell..
    /// </summary>
    internal static string WSManPluginProtocolVersionNotFound {
        get {
            return ResourceManager.GetString("WSManPluginProtocolVersionNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &lt;PSProtocolVersionError ServerProtocolVersion=&quot;{0}&quot; ServerBuildVersion=&quot;{1}&quot;&gt;Powershell plugin does not support the protocol version {2} requested by client.&lt;/PSProtocolVersionError&gt;.
    /// </summary>
    internal static string WSManPluginProtocolVersionNotMatch {
        get {
            return ResourceManager.GetString("WSManPluginProtocolVersionNotMatch", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Powershell plugin encounterd a fatal error while reporting context to WSMan service..
    /// </summary>
    internal static string WSManPluginReportContextFailed {
        get {
            return ResourceManager.GetString("WSManPluginReportContextFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Unable to create managed server session..
    /// </summary>
    internal static string WSManPluginSessionCreationFailed {
        get {
            return ResourceManager.GetString("WSManPluginSessionCreationFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Powershell plugin encounterd a fatal error registering a wait handle for shutdown notification..
    /// </summary>
    internal static string WSManPluginShutdownRegistrationFailed {
        get {
            return ResourceManager.GetString("WSManPluginShutdownRegistrationFailed", resourceCulture);
        }
    }
}
