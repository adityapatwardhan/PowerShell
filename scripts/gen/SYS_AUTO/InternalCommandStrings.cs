//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;



/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class InternalCommandStrings {
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal InternalCommandStrings() {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("InternalCommandStrings", typeof(InternalCommandStrings).GetTypeInfo().Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Input name &quot;{0}&quot; is ambiguous. It can be resolved to multiple matched methods. Possible matches include:{1}..
    /// </summary>
    internal static string AmbiguousMethodName {
        get {
            return ResourceManager.GetString("AmbiguousMethodName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Input name &quot;{0}&quot; is ambiguous. It can be resolved to multiple matched members. Possible matches include:{1}..
    /// </summary>
    internal static string AmbiguousPropertyOrMethodName {
        get {
            return ResourceManager.GetString("AmbiguousPropertyOrMethodName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Retrieve the value for key &apos;{0}&apos;.
    /// </summary>
    internal static string ForEachObjectKeyAction {
        get {
            return ResourceManager.GetString("ForEachObjectKeyAction", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Invoke method &apos;{0}&apos; with arguments: {1}.
    /// </summary>
    internal static string ForEachObjectMethodActionWithArguments {
        get {
            return ResourceManager.GetString("ForEachObjectMethodActionWithArguments", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Invoke method &apos;{0}&apos;.
    /// </summary>
    internal static string ForEachObjectMethodActionWithoutArguments {
        get {
            return ResourceManager.GetString("ForEachObjectMethodActionWithoutArguments", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Retrieve the value for property &apos;{0}&apos;.
    /// </summary>
    internal static string ForEachObjectPropertyAction {
        get {
            return ResourceManager.GetString("ForEachObjectPropertyAction", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to InputObject: {0}.
    /// </summary>
    internal static string ForEachObjectTarget {
        get {
            return ResourceManager.GetString("ForEachObjectTarget", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot operate on a &apos;null&apos; input object..
    /// </summary>
    internal static string InputObjectIsNull {
        get {
            return ResourceManager.GetString("InputObjectIsNull", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Input name &quot;{0}&quot; cannot be resolved to a method..
    /// </summary>
    internal static string MethodNotFound {
        get {
            return ResourceManager.GetString("MethodNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot invoke a method in the restricted language mode..
    /// </summary>
    internal static string NoMethodInvocationInRestrictedLanguageMode {
        get {
            return ResourceManager.GetString("NoMethodInvocationInRestrictedLanguageMode", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The -WhatIf and -Confirm parameters are not supported for script blocks..
    /// </summary>
    internal static string NoShouldProcessForScriptBlockSet {
        get {
            return ResourceManager.GetString("NoShouldProcessForScriptBlockSet", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The &apos;{0}&apos; operation is not allowed in the RestrictedLanguage mode..
    /// </summary>
    internal static string OperationNotAllowedInRestrictedLanguageMode {
        get {
            return ResourceManager.GetString("OperationNotAllowedInRestrictedLanguageMode", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to An operator is required to compare the two specified values. Include a valid operator in the command, and then try the command again. For example, Get-Process | Where-Object -Property Name -eq Idle.
    /// </summary>
    internal static string OperatorNotSpecified {
        get {
            return ResourceManager.GetString("OperatorNotSpecified", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input name &quot;{0}&quot; cannot be resolved to a property..
    /// </summary>
    internal static string PropertyNotFound {
        get {
            return ResourceManager.GetString("PropertyNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The input name &quot;{0}&quot; cannot be resolved to a member..
    /// </summary>
    internal static string PropertyOrMethodNotFound {
        get {
            return ResourceManager.GetString("PropertyOrMethodNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified operator requires both the -Property and -Value parameters. Provide values for both parameters, and then try the command again..
    /// </summary>
    internal static string ValueNotSpecifiedForWhereObject {
        get {
            return ResourceManager.GetString("ValueNotSpecifiedForWhereObject", resourceCulture);
        }
    }
}
