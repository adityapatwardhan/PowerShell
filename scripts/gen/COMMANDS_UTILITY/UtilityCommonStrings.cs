//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;



/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class UtilityCommonStrings {
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal UtilityCommonStrings() {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UtilityCommonStrings", typeof(UtilityCommonStrings).GetTypeInfo().Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Algorithm &apos;{0}&apos; is not supported in this system..
    /// </summary>
    internal static string AlgorithmTypeNotSupported {
        get {
            return ResourceManager.GetString("AlgorithmTypeNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The file &apos;{0}&apos; could not be parsed as a PowerShell Data File..
    /// </summary>
    internal static string CouldNotParseAsPowerShellDataFile {
        get {
            return ResourceManager.GetString("CouldNotParseAsPowerShellDataFile", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This command cannot be run because &apos;{0}&apos; is empty or blank. Please specify CSSUri and then run the command..
    /// </summary>
    internal static string EmptyCSSUri {
        get {
            return ResourceManager.GetString("EmptyCSSUri", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This command cannot be run because the file path &apos;{0}&apos; is not valid. Please provide a valid file path and then run the command..
    /// </summary>
    internal static string FileNotFound {
        get {
            return ResourceManager.GetString("FileNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot open the file because the current provider ({0}) cannot open files..
    /// </summary>
    internal static string FileOpenError {
        get {
            return ResourceManager.GetString("FileOpenError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The file &apos;{0}&apos; cannot be read: {1}.
    /// </summary>
    internal static string FileReadError {
        get {
            return ResourceManager.GetString("FileReadError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Path: .
    /// </summary>
    internal static string FormatHexPathPrefix {
        get {
            return ResourceManager.GetString("FormatHexPathPrefix", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot display the context of {0} as hex. The path resolves to multiple files..
    /// </summary>
    internal static string FormatHexResolvePathError {
        get {
            return ResourceManager.GetString("FormatHexResolvePathError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot convert input of type {0} to hexadecimal. To view the hexadecimal formatting of its string representation, pipe it to the Out-String cmdlet before piping it to Format-Hex..
    /// </summary>
    internal static string FormatHexTypeNotSupported {
        get {
            return ResourceManager.GetString("FormatHexTypeNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot be run because using the AsHashTable parameter with more than one property requires adding the AsString parameter..
    /// </summary>
    internal static string GroupObjectSingleProperty {
        get {
            return ResourceManager.GetString("GroupObjectSingleProperty", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot be run because the AsString parameter requires that you specify the AsHashtable parameter..
    /// </summary>
    internal static string GroupObjectWithHashTable {
        get {
            return ResourceManager.GetString("GroupObjectWithHashTable", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The objects grouped by this property cannot be expanded because there is a key duplication. Provide a valid value for the property, and then try again..
    /// </summary>
    internal static string InvalidOperation {
        get {
            return ResourceManager.GetString("InvalidOperation", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {2} has one or more exceptions that are not valid..
    /// </summary>
    internal static string Invalidpath {
        get {
            return ResourceManager.GetString("Invalidpath", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to There are no matching results found for {2}..
    /// </summary>
    internal static string NoMatchFound {
        get {
            return ResourceManager.GetString("NoMatchFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command is not supported on this operating system..
    /// </summary>
    internal static string NotSupported {
        get {
            return ResourceManager.GetString("NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find path &apos;{0}&apos; because it does not exist..
    /// </summary>
    internal static string PathDoesNotExist {
        get {
            return ResourceManager.GetString("PathDoesNotExist", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot use tag &apos;{0}&apos;. The &apos;PS&apos; prefix is reserved..
    /// </summary>
    internal static string PSPrefixReservedInInformationTag {
        get {
            return ResourceManager.GetString("PSPrefixReservedInInformationTag", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This command cannot be run because the prefix value in the Namespace parameter is null. Provide a valid value for the prefix, and then run the command again..
    /// </summary>
    internal static string SearchXMLPrefixNullError {
        get {
            return ResourceManager.GetString("SearchXMLPrefixNullError", resourceCulture);
        }
    }
}
