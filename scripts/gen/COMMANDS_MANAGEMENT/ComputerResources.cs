//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;



/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
internal class ComputerResources {
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal ComputerResources() {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ComputerResources", typeof(ComputerResources).GetTypeInfo().Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
    
    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    internal static global::System.Globalization.CultureInfo Culture {
        get {
            return resourceCulture;
        }
        set {
            resourceCulture = value;
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Join in domain &apos;{0}&apos;.
    /// </summary>
    internal static string AddComputerActionDomain {
        get {
            return ResourceManager.GetString("AddComputerActionDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Join in workgroup &apos;{0}&apos;.
    /// </summary>
    internal static string AddComputerActionWorkgroup {
        get {
            return ResourceManager.GetString("AddComputerActionWorkgroup", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot add computer &apos;{0}&apos; to domain &apos;{1}&apos; because it is already in that domain..
    /// </summary>
    internal static string AddComputerToSameDomain {
        get {
            return ResourceManager.GetString("AddComputerToSameDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot add computer &apos;{0}&apos; to workgroup &apos;{1}&apos; because it is already in that workgroup..
    /// </summary>
    internal static string AddComputerToSameWorkgroup {
        get {
            return ResourceManager.GetString("AddComputerToSameWorkgroup", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to A new system restore point cannot be created because one has already been created within the past {0} minutes. The frequency of restore point creation can be changed by creating the DWORD value &apos;SystemRestorePointCreationFrequency&apos; under the registry key &apos;HKLM\Software\Microsoft\Windows NT\CurrentVersion\SystemRestore&apos;. The value of this registry key indicates the necessary time interval (in minutes) between two restore point creation. The default value is 1440 minutes (24 hours)..
    /// </summary>
    internal static string CannotCreateRestorePointWarning {
        get {
            return ResourceManager.GetString("CannotCreateRestorePointWarning", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find the computer account for the local computer in the domain {0}..
    /// </summary>
    internal static string CannotFindMachineAccountFromDomain {
        get {
            return ResourceManager.GetString("CannotFindMachineAccountFromDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot find the computer account for the local computer from the domain controller {0}..
    /// </summary>
    internal static string CannotFindMachineAccountFromServer {
        get {
            return ResourceManager.GetString("CannotFindMachineAccountFromServer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The Win32_OperatingSystem WMI object cannot be retrieved..
    /// </summary>
    internal static string CannotGetOperatingSystemObject {
        get {
            return ResourceManager.GetString("CannotGetOperatingSystemObject", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot rename multiple computers. The NewName parameter is valid only if a single computer is specified..
    /// </summary>
    internal static string CannotRenameMultipleComputers {
        get {
            return ResourceManager.GetString("CannotRenameMultipleComputers", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Computer name {0} cannot be resolved with the exception: {1}..
    /// </summary>
    internal static string CannotResolveComputerName {
        get {
            return ResourceManager.GetString("CannotResolveComputerName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The specified server name {0} cannot be resolved..
    /// </summary>
    internal static string CannotResolveServerName {
        get {
            return ResourceManager.GetString("CannotResolveServerName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot wait for the local computer to restart. The local computer is ignored when the Wait parameter is specified..
    /// </summary>
    internal static string CannotWaitLocalComputer {
        get {
            return ResourceManager.GetString("CannotWaitLocalComputer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The value specified for the NewComputerName parameter is the same as the value of the ComputerName parameter. Provide a different value for the NewComputerName parameter..
    /// </summary>
    internal static string ComputerNamesAreEqual {
        get {
            return ResourceManager.GetString("ComputerNamesAreEqual", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove computer &apos;{0}&apos; because it is not in a domain..
    /// </summary>
    internal static string ComputerNotInDomain {
        get {
            return ResourceManager.GetString("ComputerNotInDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to {0} ({1}).
    /// </summary>
    internal static string DoubleComputerName {
        get {
            return ResourceManager.GetString("DoubleComputerName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot establish the WMI connection to the computer &apos;{0}&apos; with the following error message: {1}..
    /// </summary>
    internal static string FailToConnectToComputer {
        get {
            return ResourceManager.GetString("FailToConnectToComputer", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot get domain information about the local computer because of the following exception: {0}..
    /// </summary>
    internal static string FailToGetDomainInformation {
        get {
            return ResourceManager.GetString("FailToGetDomainInformation", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Computer &apos;{0}&apos; failed to join domain &apos;{1}&apos; from its current workgroup &apos;{2}&apos; with following error message: {3}..
    /// </summary>
    internal static string FailToJoinDomainFromWorkgroup {
        get {
            return ResourceManager.GetString("FailToJoinDomainFromWorkgroup", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Computer &apos;{0}&apos; was successfully unjoined from domain &apos;{1}&apos;, but failed to join the new domain &apos;{2}&apos; with the following error message: {3}..
    /// </summary>
    internal static string FailToJoinNewDomainAfterUnjoinOldDomain {
        get {
            return ResourceManager.GetString("FailToJoinNewDomainAfterUnjoinOldDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to join computer &apos;{0}&apos; to workgroup &apos;{1}&apos; with the following error message: {2}.
    /// </summary>
    internal static string FailToJoinWorkGroup {
        get {
            return ResourceManager.GetString("FailToJoinWorkGroup", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Fail to rename computer &apos;{0}&apos; to &apos;{1}&apos; due to the following exception: {2}..
    /// </summary>
    internal static string FailToRename {
        get {
            return ResourceManager.GetString("FailToRename", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Computer &apos;{0}&apos; was successfully joined to the new domain &apos;{1}&apos;, but renaming it to &apos;{2}&apos; failed with the following error message: {3}..
    /// </summary>
    internal static string FailToRenameAfterJoinDomain {
        get {
            return ResourceManager.GetString("FailToRenameAfterJoinDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Computer &apos;{0}&apos; successfully joined the workgroup &apos;{1}&apos;, but could not be renamed to &apos;{2}&apos; with the following error message: {3}..
    /// </summary>
    internal static string FailToRenameAfterJoinWorkgroup {
        get {
            return ResourceManager.GetString("FailToRenameAfterJoinWorkgroup", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot reset the secure channel password for the computer account in the domain. Operation failed with the following exception: {0}..
    /// </summary>
    internal static string FailToResetPasswordOnDomain {
        get {
            return ResourceManager.GetString("FailToResetPasswordOnDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Resetting the secure channel password for the local computer failed with the following error message: {0}..
    /// </summary>
    internal static string FailToResetPasswordOnLocalMachine {
        get {
            return ResourceManager.GetString("FailToResetPasswordOnLocalMachine", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot validate the time interval for restore point creation. It failed to retrieve the last restore point with the following error message: {0}..
    /// </summary>
    internal static string FailToRetrieveLastRestorePoint {
        get {
            return ResourceManager.GetString("FailToRetrieveLastRestorePoint", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Computer &apos;{0}&apos; was successfully unjoined from the domain &apos;{1}&apos;, but it failed to join the workgroup &apos;{2}&apos; with the following error message: {3}..
    /// </summary>
    internal static string FailToSwitchFromDomainToWorkgroup {
        get {
            return ResourceManager.GetString("FailToSwitchFromDomainToWorkgroup", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot verify the secure channel for the local computer. Operation failed with the following exception: {0}..
    /// </summary>
    internal static string FailToTestSecureChannel {
        get {
            return ResourceManager.GetString("FailToTestSecureChannel", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to unjoin computer &apos;{0}&apos; from domain &apos;{1}&apos; with the following error message: {2}..
    /// </summary>
    internal static string FailToUnjoinDomain {
        get {
            return ResourceManager.GetString("FailToUnjoinDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The number of new names is not equal to the number of target computers..
    /// </summary>
    internal static string IncorrectNewNameNumber {
        get {
            return ResourceManager.GetString("IncorrectNewNameNumber", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The following computer name is not valid: {0}. Make sure that the computer name is not longer than 255 characters, that it does not contain two or more consecutive dots, that it does not begin with a dot, that it does not contain only numeric characters, and that it does not contain any of the following characters:  
    ///{{|}}~[\]^:;&lt;=&gt;?@!&quot;#$%^`()+/,.
    /// </summary>
    internal static string InvalidComputerNameFormat {
        get {
            return ResourceManager.GetString("InvalidComputerNameFormat", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The domain in computer name &apos;{0}&apos; is not valid. Make sure that the domain exists and that the name is a valid domain name..
    /// </summary>
    internal static string InvalidDomainNameFormat {
        get {
            return ResourceManager.GetString("InvalidDomainNameFormat", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot turn on the restore computer infrastructure on the specified computer because the supplied drive is not valid. Enter a valid drive in the Drive parameter, and then try again..
    /// </summary>
    internal static string InvalidDrive {
        get {
            return ResourceManager.GetString("InvalidDrive", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The flag &apos;{0}&apos; is valid only if flag &apos;{1}&apos; is specified..
    /// </summary>
    internal static string InvalidJoinOptions {
        get {
            return ResourceManager.GetString("InvalidJoinOptions", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Skip computer &apos;{0}&apos; with new name &apos;{1}&apos; because the new name is not valid. The new computer name entered is not properly formatted. Standard names may contain letters (a-z, A-Z), numbers (0-9), and hyphens (-), but no spaces or periods (.). The name may not consist entirely of digits, and may not be longer than 63 characters..
    /// </summary>
    internal static string InvalidNewName {
        get {
            return ResourceManager.GetString("InvalidNewName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to DcomAuthentication is not supported. Please use WsmanAuthentication instead..
    /// </summary>
    internal static string InvalidParameterDCOMNotSupported {
        get {
            return ResourceManager.GetString("InvalidParameterDCOMNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The {0} parameter is not supported for CoreCLR..
    /// </summary>
    internal static string InvalidParameterForCoreClr {
        get {
            return ResourceManager.GetString("InvalidParameterForCoreClr", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameter WsmanAuthentication should not be specified when the DCOM protocol is in use. {0}.
    /// </summary>
    internal static string InvalidParameterForDCOM {
        get {
            return ResourceManager.GetString("InvalidParameterForDCOM", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameters DcomAuthentication and Impersonation should not be specified when the WSMan protocol is in use. {0}.
    /// </summary>
    internal static string InvalidParameterForWSMan {
        get {
            return ResourceManager.GetString("InvalidParameterForWSMan", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The AsJob Parameter Set is not supported..
    /// </summary>
    internal static string InvalidParameterSetAsJob {
        get {
            return ResourceManager.GetString("InvalidParameterSetAsJob", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot restore the computer because &quot;{0}&quot; has not been set as valid restore point. Enter a valid restore point in the RestorePoint parameter, and then try again..
    /// </summary>
    internal static string InvalidRestorePoint {
        get {
            return ResourceManager.GetString("InvalidRestorePoint", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Local shutdown access rights.
    /// </summary>
    internal static string LocalShutdownPrivilege {
        get {
            return ResourceManager.GetString("LocalShutdownPrivilege", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Administrator rights are required to reset the secure channel password on the local computer. Access is denied..
    /// </summary>
    internal static string NeedAdminPrivilegeToResetPassword {
        get {
            return ResourceManager.GetString("NeedAdminPrivilegeToResetPassword", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot remove computer(s) from the domain because the local network is down..
    /// </summary>
    internal static string NetworkDown {
        get {
            return ResourceManager.GetString("NetworkDown", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Try below options and Run the command again.
    ///1. Verify that the target computer(&apos;{0}&apos;) is running.
    ///2. Specify full computer name of the target computer(&apos;{0}&apos;)..
    /// </summary>
    internal static string NetworkPathNotFound {
        get {
            return ResourceManager.GetString("NetworkPathNotFound", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Skip computer &apos;{0}&apos; with new name &apos;{1}&apos; because the new name is the same as the current name..
    /// </summary>
    internal static string NewNameIsOldName {
        get {
            return ResourceManager.GetString("NewNameIsOldName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Testing connection to computer &apos;{0}&apos; failed: {1}.
    /// </summary>
    internal static string NoPingResult {
        get {
            return ResourceManager.GetString("NoPingResult", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot locate the &quot;{0}&quot; restore point. Verify the &quot;{0}&quot; sequence number, and then try the command again..
    /// </summary>
    internal static string NoResorePoint {
        get {
            return ResourceManager.GetString("NoResorePoint", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The combined service types are not supported for now..
    /// </summary>
    internal static string NoSupportForCombinedServiceType {
        get {
            return ResourceManager.GetString("NoSupportForCombinedServiceType", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Include System Drive in the list of Drives..
    /// </summary>
    internal static string NoSystemDrive {
        get {
            return ResourceManager.GetString("NoSystemDrive", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot disable System Restore on the {0} drive. You may not have sufficient permissions to perform this operation..
    /// </summary>
    internal static string NotDisabled {
        get {
            return ResourceManager.GetString("NotDisabled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Could not enable drive {0}..
    /// </summary>
    internal static string NotEnabled {
        get {
            return ResourceManager.GetString("NotEnabled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This functionality is not supported on this operating system..
    /// </summary>
    internal static string NotSupported {
        get {
            return ResourceManager.GetString("NotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The command cannot turn off the restore computer infrastructure because the supplied drive is not valid. Enter a valid drive in the Drive parameter, and then try again..
    /// </summary>
    internal static string NotValidDrive {
        get {
            return ResourceManager.GetString("NotValidDrive", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This command cannot be run on target computer(&apos;{1}&apos;) due to following error: {0}.{2}.
    /// </summary>
    internal static string OperationFailed {
        get {
            return ResourceManager.GetString("OperationFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameter WsmanAuthentication should not be specified with DcomAuthentication and Impersonation at the same time. {0}.
    /// </summary>
    internal static string ParameterConfliction {
        get {
            return ResourceManager.GetString("ParameterConfliction", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameter WsmanAuthentication is valid only if the WSMan protocol is used. Parameters DcomAuthentication (Authentication) and Impersonation are valid only if the DCOM protocol is used..
    /// </summary>
    internal static string ParameterUsage {
        get {
            return ResourceManager.GetString("ParameterUsage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to restart the computer {0}. Access rights {1} cannot be enabled for the calling process..
    /// </summary>
    internal static string PrivilegeNotEnabled {
        get {
            return ResourceManager.GetString("PrivilegeNotEnabled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Creating a system restore point ....
    /// </summary>
    internal static string ProgressActivity {
        get {
            return ResourceManager.GetString("ProgressActivity", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Completed..
    /// </summary>
    internal static string ProgressStatusCompleted {
        get {
            return ResourceManager.GetString("ProgressStatusCompleted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Creating a system restore point... {0}% Completed..
    /// </summary>
    internal static string ProgressStatusCreatingRestorePoint {
        get {
            return ResourceManager.GetString("ProgressStatusCreatingRestorePoint", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Remote shutdown access rights.
    /// </summary>
    internal static string RemoteShutdownPrivilege {
        get {
            return ResourceManager.GetString("RemoteShutdownPrivilege", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to After you leave the domain, you will need to know the password of the local Administrator account to log onto this computer. Do you wish to continue?.
    /// </summary>
    internal static string RemoveComputerConfirm {
        get {
            return ResourceManager.GetString("RemoveComputerConfirm", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameter WsmanAuthentication cannot be specified with the DCOM protocol. Parameter WSManAuthentication is valid only when the WSMan protocol is used..
    /// </summary>
    internal static string RenameCommandWsmanAuthParamConflict {
        get {
            return ResourceManager.GetString("RenameCommandWsmanAuthParamConflict", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The attempt to repair the secure channel between the local computer and the domain {0} has failed..
    /// </summary>
    internal static string RepairSecureChannelFail {
        get {
            return ResourceManager.GetString("RepairSecureChannelFail", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The secure channel between the local computer and the domain {0} was successfully repaired..
    /// </summary>
    internal static string RepairSecureChannelSucceed {
        get {
            return ResourceManager.GetString("RepairSecureChannelSucceed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to &quot;The password of the secure channel between &apos;{0}&apos; and &apos;{1}&apos; has been reset.&quot;.
    /// </summary>
    internal static string ResetComputerMachinePassword {
        get {
            return ResourceManager.GetString("ResetComputerMachinePassword", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot reset the secure channel password for the account of the local computer. The local computer is not currently part of a domain..
    /// </summary>
    internal static string ResetComputerNotInDomain {
        get {
            return ResourceManager.GetString("ResetComputerNotInDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Restart is complete.
    /// </summary>
    internal static string RestartComplete {
        get {
            return ResourceManager.GetString("RestartComplete", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Enable the {0} and restart the computer..
    /// </summary>
    internal static string RestartComputerAction {
        get {
            return ResourceManager.GetString("RestartComputerAction", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to restart the computer {0} with the following error message: {1}..
    /// </summary>
    internal static string RestartcomputerFailed {
        get {
            return ResourceManager.GetString("RestartcomputerFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The parameters Timeout, For, and Delay are valid only when the parameter Wait is specified..
    /// </summary>
    internal static string RestartComputerInvalidParameter {
        get {
            return ResourceManager.GetString("RestartComputerInvalidParameter", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The computer {0} is skipped. Fail to retrieve its LastBootUpTime via the WMI service with the following error message: {1}..
    /// </summary>
    internal static string RestartComputerSkipped {
        get {
            return ResourceManager.GetString("RestartComputerSkipped", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to  Restarting computers....
    /// </summary>
    internal static string RestartMultipleComputersActivity {
        get {
            return ResourceManager.GetString("RestartMultipleComputersActivity", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The changes will take effect after you restart the computer {1}..
    /// </summary>
    internal static string RestartNeeded {
        get {
            return ResourceManager.GetString("RestartNeeded", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to  Restarting computer {0}.
    /// </summary>
    internal static string RestartSingleComputerActivity {
        get {
            return ResourceManager.GetString("RestartSingleComputerActivity", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The last attempt to restore the computer failed..
    /// </summary>
    internal static string RestoreFailed {
        get {
            return ResourceManager.GetString("RestoreFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The last attempt to restore the computer was interrupted..
    /// </summary>
    internal static string RestoreInterrupted {
        get {
            return ResourceManager.GetString("RestoreInterrupted", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The system restore infrastructure cannot create a restore point..
    /// </summary>
    internal static string RestorePointNotCreated {
        get {
            return ResourceManager.GetString("RestorePointNotCreated", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The computer has been restored to the specified restore point..
    /// </summary>
    internal static string RestoreSuceess {
        get {
            return ResourceManager.GetString("RestoreSuceess", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The secure channel between the local computer and the domain {0} is in good condition..
    /// </summary>
    internal static string SecureChannelAlive {
        get {
            return ResourceManager.GetString("SecureChannelAlive", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The secure channel between the local computer and the domain {0} is broken..
    /// </summary>
    internal static string SecureChannelBroken {
        get {
            return ResourceManager.GetString("SecureChannelBroken", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to SystemRestore service is disabled..
    /// </summary>
    internal static string ServiceDisabled {
        get {
            return ResourceManager.GetString("ServiceDisabled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameters DcomAuthentication and Impersonation cannot be specified with the WSMan protocol. {0}.
    /// </summary>
    internal static string StopCommandAuthProtcolConflict {
        get {
            return ResourceManager.GetString("StopCommandAuthProtcolConflict", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameter WsmanAuthentication is valid only when the WSMan protocol is used. Parameters DcomAuthentication and Impersonation are valid only when the DCOM protocol is used..
    /// </summary>
    internal static string StopCommandParamMessage {
        get {
            return ResourceManager.GetString("StopCommandParamMessage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameter WsmanAuthentication cannot be specified with DcomAuthentication or Impersonation parameters. {0}.
    /// </summary>
    internal static string StopCommandParamWSManAuthConflict {
        get {
            return ResourceManager.GetString("StopCommandParamWSManAuthConflict", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Parameter WsmanAuthentication cannot be specified with the DCOM protocol. {0}.
    /// </summary>
    internal static string StopCommandWSManAuthProtcolConflict {
        get {
            return ResourceManager.GetString("StopCommandWSManAuthProtcolConflict", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Failed to stop the computer {0} with the following error message: {1}..
    /// </summary>
    internal static string StopcomputerFailed {
        get {
            return ResourceManager.GetString("StopcomputerFailed", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The operation cannot be performed because the system restore APIs are not supported on the Advanced RISC Machine (ARM) platform..
    /// </summary>
    internal static string SystemRestoreNotSupported {
        get {
            return ResourceManager.GetString("SystemRestoreNotSupported", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to This command cannot be run due to the following error: the service cannot be started because it is disabled or does not have enabled devices associated with it..
    /// </summary>
    internal static string SystemRestoreServiceDisabled {
        get {
            return ResourceManager.GetString("SystemRestoreServiceDisabled", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Cannot verify the secure channel password for the local computer. The local computer is not currently part of a domain..
    /// </summary>
    internal static string TestComputerNotInDomain {
        get {
            return ResourceManager.GetString("TestComputerNotInDomain", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The computer did not finish restarting within the specified time-out period..
    /// </summary>
    internal static string TimeoutError {
        get {
            return ResourceManager.GetString("TimeoutError", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to The NetBIOS name of the computer is limited to 15 bytes, which is 15 characters in this case. The NetBIOS name will be shortened to &quot;{0}&quot;, which may cause conflicts under NetBIOS name resolution. Do you wish to continue?.
    /// </summary>
    internal static string TruncateNetBIOSName {
        get {
            return ResourceManager.GetString("TruncateNetBIOSName", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to NetBIOS name will be truncated..
    /// </summary>
    internal static string TruncateNetBIOSNameCaption {
        get {
            return ResourceManager.GetString("TruncateNetBIOSNameCaption", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Verifying that the computer has been restarted....
    /// </summary>
    internal static string VerifyRebootStage {
        get {
            return ResourceManager.GetString("VerifyRebootStage", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Completed: {0}/{1}..
    /// </summary>
    internal static string WaitForMultipleComputers {
        get {
            return ResourceManager.GetString("WaitForMultipleComputers", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Waiting for Windows PowerShell connectivity....
    /// </summary>
    internal static string WaitForPowerShell {
        get {
            return ResourceManager.GetString("WaitForPowerShell", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Waiting for the restart to begin....
    /// </summary>
    internal static string WaitForRestartToBegin {
        get {
            return ResourceManager.GetString("WaitForRestartToBegin", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Waiting for WinRM connectivity....
    /// </summary>
    internal static string WaitForWinRM {
        get {
            return ResourceManager.GetString("WaitForWinRM", resourceCulture);
        }
    }
    
    /// <summary>
    ///   Looks up a localized string similar to Waiting for WMI connectivity....
    /// </summary>
    internal static string WaitForWMI {
        get {
            return ResourceManager.GetString("WaitForWMI", resourceCulture);
        }
    }
}
